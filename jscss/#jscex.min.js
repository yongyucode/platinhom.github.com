UglifyJS = {}, function (a) { function Q(a, b) { return Object.prototype.hasOwnProperty.call(a, b) } function P(a, b) { for (var c = b.length; --c >= 0; ) if (b[c] === a) return !0; return !1 } function O(a) { return a.split("") } function N(a, b) { return Array.prototype.slice.call(a, b == null ? 0 : b) } function M(a) { var b = {}; for (var c = 0; c < a.length; ++c) b[a[c]] = !0; return b } function L(a) { a instanceof Function && (a = a()); for (var b = 1, c = arguments.length; --c > 0; ++b) arguments[b](); return a } function K(a) { var b = N(arguments, 1); return function () { return a.apply(this, b.concat(N(arguments))) } } function J(a, b, c) { function bl(a) { try { ++d.in_loop; return a() } finally { --d.in_loop } } function bk(a, b) { arguments.length == 0 && (a = !0); var c = bj(b); if (a && e("punc", ",")) { g(); return p("seq", c, bk(!0, b)) } return c } function bj(a) { var b = bh(a), c = d.token.value; if (e("operator") && Q(E, c)) { if (bi(b)) { g(); return p("assign", E[c], b, bj(a)) } i("Invalid assignment") } return b } function bi(a) { if (!b) return !0; switch (a[0]) { case "dot": case "sub": case "new": case "call": return !0; case "name": return a[1] != "this" } } function bh(a) { var b = bg(a); if (e("operator", "?")) { g(); var c = bk(!1); m(":"); return p("conditional", b, c, bk(!1, a)) } return b } function bg(a) { return bf(Z(!0), 0, a) } function bf(a, b, c) { var f = e("operator") ? d.token.value : null; f && f == "in" && c && (f = null); var h = f != null ? F[f] : null; if (h != null && h > b) { g(); var i = bf(Z(!0), h, c); return bf(p("binary", f, a, i), b, c) } return a } function be(a, b, c) { (b == "++" || b == "--") && !bi(c) && i("Invalid use of " + b + " operator"); return p(a, b, c) } function bd(a, b) { if (e("punc", ".")) { g(); return bd(p("dot", a, bc()), b) } if (e("punc", "[")) { g(); return bd(p("sub", a, L(bk, K(m, "]"))), b) } if (b && e("punc", "(")) { g(); return bd(p("call", a, $(")")), !0) } if (b && e("operator") && Q(D, d.token.value)) return L(K(be, "unary-postfix", d.token.value, a), g); return a } function bc() { switch (d.token.type) { case "name": case "operator": case "keyword": case "atom": return L(d.token.value, g); default: k() } } function bb() { switch (d.token.type) { case "num": case "string": return L(d.token.value, g) } return bc() } function ba() { var a = !0, c = []; while (!e("punc", "}")) { a ? a = !1 : m(","); if (!b && e("punc", "}")) break; var f = d.token.type, h = bb(); f != "name" || h != "get" && h != "set" || !!e("punc", ":") ? (m(":"), c.push([h, bk(!1)])) : c.push([bc(), M(!1), h]) } g(); return p("object", c) } function _() { return p("array", $("]", !b, !0)) } function $(a, b, c) { var d = !0, f = []; while (!e("punc", a)) { d ? d = !1 : m(","); if (b && e("punc", a)) break; e("punc", ",") && c ? f.push(["atom", "undefined"]) : f.push(bk(!1)) } g(); return f } function Z(a) { if (e("operator", "new")) { g(); return Y() } if (e("operator") && Q(C, d.token.value)) return be("unary-prefix", L(d.token.value, g), Z(a)); if (e("punc")) { switch (d.token.value) { case "(": g(); return bd(L(bk, K(m, ")")), a); case "[": g(); return bd(_(), a); case "{": g(); return bd(ba(), a) } k() } if (e("keyword", "function")) { g(); return bd(M(!1), a) } if (Q(H, d.token.type)) { var b = d.token.type == "regexp" ? p("regexp", d.token.value[0], d.token.value[1]) : p(d.token.type, d.token.value); return bd(L(b, g), a) } k() } function Y() { var a = Z(!1), b; e("punc", "(") ? (g(), b = $(")")) : b = []; return bd(p("new", a, b), !0) } function X() { return p("const", V()) } function W(a) { return p("var", V(a)) } function V(a) { var b = []; for (; ; ) { e("name") || k(); var c = d.token.value; g(), e("operator", "=") ? (g(), b.push([c, bk(!1, a)])) : b.push([c]); if (!e("punc", ",")) break; g() } return b } function U() { var a = S(), b, c; if (e("keyword", "catch")) { g(), m("("), e("name") || i("Name expected"); var f = d.token.value; g(), m(")"), b = [f, S()] } e("keyword", "finally") && (g(), c = S()), !b && !c && i("Missing catch/finally blocks"); return p("try", a, b, c) } function S() { m("{"); var a = []; while (!e("punc", "}")) e("eof") && k(), a.push(s()); g(); return a } function R() { var a = q(), b = s(), c; e("keyword", "else") && (g(), c = s()); return p("if", a, b, c) } function O(a) { var b = e("name") ? L(d.token.value, g) : null; a && !b && k(), m("("); return p(a ? "defun" : "function", b, function (a, b) { while (!e("punc", ")")) a ? a = !1 : m(","), e("name") || k(), b.push(d.token.value), g(); g(); return b } (!0, []), function () { ++d.in_function; var a = d.in_loop; d.in_loop = 0; var b = S(); --d.in_function, d.in_loop = a; return b } ()) } function J(a) { var b = a[0] == "var" ? p("name", a[1][0]) : a; g(); var c = bk(); m(")"); return p("for-in", a, b, c, bl(s)) } function A(a) { m(";"); var b = e("punc", ";") ? null : bk(); m(";"); var c = e("punc", ")") ? null : bk(); m(")"); return p("for", a, b, c, bl(s)) } function x() { m("("); var a = null; if (!e("punc", ";")) { a = e("keyword", "var") ? (g(), W(!0)) : bk(!0, !0); if (e("operator", "in")) return J(a) } return A(a) } function w(a) { var b = e("name") ? d.token.value : null; b != null ? (g(), P(b, d.labels) || i("Label " + b + " without matching loop or statement")) : d.in_loop == 0 && i(a + " not inside a loop or switch"), o(); return p(a, b) } function v() { return p("stat", L(bk, o)) } function u(a) { d.labels.push(a); var c = d.token, e = s(); b && !Q(G, e[0]) && k(c), d.labels.pop(); return p("label", a, e) } function t() { e("operator", "/") && (d.peeked = null, d.token = d.input(!0)); switch (d.token.type) { case "num": case "string": case "regexp": case "operator": case "atom": return v(); case "name": return z(f(), "punc", ":") ? u(L(d.token.value, g, g)) : v(); case "punc": switch (d.token.value) { case "{": return p("block", S()); case "[": case "(": return v(); case ";": g(); return p("block"); default: k() }; case "keyword": switch (L(d.token.value, g)) { case "break": return w("break"); case "continue": return w("continue"); case "debugger": o(); return p("debugger"); case "do": return function (a) { l("keyword", "while"); return p("do", L(q, o), a) } (bl(s)); case "for": return x(); case "function": return M(!0); case "if": return R(); case "return": d.in_function == 0 && i("'return' outside of function"); return p("return", e("punc", ";") ? (g(), null) : n() ? null : L(bk, o)); case "switch": return p("switch", q(), T()); case "throw": return p("throw", L(bk, o)); case "try": return U(); case "var": return L(W, o); case "const": return L(X, o); case "while": return p("while", q(), bl(s)); case "with": return p("with", q(), s()); default: k() } } } function r(a, b, c) { return a instanceof I ? a : new I(a, b, c) } function q() { m("("); var a = bk(); m(")"); return a } function p() { return N(arguments) } function o() { e("punc", ";") ? g() : n() || k() } function n() { return !b && (d.token.nlb || e("eof") || e("punc", "}")) } function m(a) { return l("punc", a) } function l(a, b) { if (e(a, b)) return g(); j(d.token, "Unexpected token " + d.token.type + ", expected " + a) } function k(a) { a == null && (a = d.token), j(a, "Unexpected token: " + a.type + " (" + a.value + ")") } function j(a, b) { i(b, a.line, a.col) } function i(a, b, c, e) { var f = d.input.context(); y(a, b != null ? b : f.tokline, c != null ? c : f.tokcol, e != null ? e : f.tokpos) } function h() { return d.prev } function g() { d.prev = d.token, d.peeked ? (d.token = d.peeked, d.peeked = null) : d.token = d.input(); return d.token } function f() { return d.peeked || (d.peeked = d.input()) } function e(a, b) { return z(d.token, a, b) } var d = { input: typeof a == "string" ? B(a, !0) : a, token: null, prev: null, peeked: null, in_function: 0, in_loop: 0, labels: [] }; d.token = g(); var s = c ? function () { var a = d.token, b = t.apply(this, arguments); b[0] = r(b[0], a, h()); return b } : t, M = c ? function () { var a = h(), b = O.apply(this, arguments); b[0] = r(b[0], a, h()); return b } : O, T = K(bl, function () { m("{"); var a = [], b = null; while (!e("punc", "}")) e("eof") && k(), e("keyword", "case") ? (g(), b = [], a.push([bk(), b]), m(":")) : e("keyword", "default") ? (g(), m(":"), b = [], a.push([null, b])) : (b || k(), b.push(s())); g(); return a }); return p("toplevel", function (a) { while (!e("eof")) a.push(s()); return a } ([])) } function I(a, b, c) { this.name = a, this.start = b, this.end = c } function B(a) { function O(a) { if (a) return I(); s(), o(); var b = g(); if (!b) return p("eof"); if (q(b)) return z(); if (b == '"' || b == "'") return E(); if (Q(m, b)) return p("punc", h()); if (b == ".") return L(); if (b == "/") return K(); if (Q(f, b)) return J(); if (b == "\\" || u(b)) return M(); x("Unexpected character '" + b + "'") } function N(a, b) { try { return b() } catch (c) { if (c === A) x(a); else throw c } } function M() { var a = H(); return Q(b, a) ? Q(j, a) ? p("operator", a) : Q(e, a) ? p("atom", a) : p("keyword", a) : p("name", a) } function L() { h(); return q(g()) ? z(".") : p("punc", ".") } function K() { h(); var a = c.regex_allowed; switch (g()) { case "/": c.comments_before.push(F()), c.regex_allowed = a; return O(); case "*": c.comments_before.push(G()), c.regex_allowed = a; return O() } return c.regex_allowed ? I() : J("/") } function J(a) { function b(a) { if (!g()) return a; var c = a + g(); if (Q(j, c)) { h(); return b(c) } return a } return p("operator", b(a || h())) } function I() { return N("Unterminated regular expression", function () { var a = !1, b = "", c, d = !1; while (c = h(!0)) if (a) b += "\\" + c, a = !1; else if (c == "[") d = !0, b += c; else if (c == "]" && d) d = !1, b += c; else { if (c == "/" && !d) break; c == "\\" ? a = !0 : b += c } var e = H(); return p("regexp", [b, e]) }) } function H() { var a = !1, b = "", c; while ((c = g()) != null) if (!a) if (c == "\\") a = !0, h(); else if (v(c)) b += h(); else break; else c != "u" && x("Expecting UnicodeEscapeSequence -- uXXXX"), c = B(), v(c) || x("Unicode char: " + c.charCodeAt(0) + " is not valid in identifier"), b += c, a = !1; return b } function G() { h(); return N("Unterminated multiline comment", function () { var a = n("*/", !0), b = c.text.substring(c.pos, a), d = p("comment2", b, !0); c.pos = a + 2, c.line += b.split("\n").length - 1, c.newline_before = b.indexOf("\n") >= 0, /^@cc_on/i.test(b) && (R("WARNING: at line " + c.line), R('*** Found "conditional comment": ' + b), R("*** UglifyJS DISCARDS ALL COMMENTS.  This means your code might no longer work properly in Internet Explorer.")); return d }) } function F() { h(); var a = n("\n"), b; a == -1 ? (b = c.text.substr(c.pos), c.pos = c.text.length) : (b = c.text.substring(c.pos, a), c.pos = a); return p("comment1", b, !0) } function E() { return N("Unterminated string constant", function () { var a = h(), b = ""; for (; ; ) { var c = h(!0); if (c == "\\") c = B(); else if (c == a) break; b += c } return p("string", b) }) } function C(a) { var b = 0; for (; a > 0; --a) { var c = parseInt(h(!0), 16); isNaN(c) && x("Invalid hex-character pattern in string"), b = b << 4 | c } return b } function B() { var a = h(!0); switch (a) { case "n": return "\n"; case "r": return "\r"; case "t": return "\t"; case "b": return "\b"; case "v": return " "; case "f": return "\f"; case "0": return "锟�"; case "x": return String.fromCharCode(C(2)); case "u": return String.fromCharCode(C(4)); default: return a } } function z(a) { var b = !1, c = !1, d = !1, e = a == ".", f = t(function (f, g) { if (f == "x" || f == "X") { if (d) return !1; return d = !0 } if (!d && (f == "E" || f == "e")) { if (b) return !1; return b = c = !0 } if (f == "-") { if (c || g == 0 && !a) return !0; return !1 } if (f == "+") return c; c = !1; if (f == ".") { if (!e && !d) return e = !0; return !1 } return r(f) }); a && (f = a + f); var g = w(f); if (!isNaN(g)) return p("num", g); x("Invalid syntax: " + f) } function x(a) { y(a, c.tokline, c.tokcol, c.tokpos) } function t(a) { var b = "", c = g(), d = 0; while (c && a(c, d++)) b += h(), c = g(); return b } function s() { while (Q(k, g())) h() } function p(a, b, e) { c.regex_allowed = a == "operator" && !Q(D, b) || a == "keyword" && Q(d, b) || a == "punc" && Q(l, b); var f = { type: a, value: b, line: c.tokline, col: c.tokcol, pos: c.tokpos, nlb: c.newline_before }; e || (f.comments_before = c.comments_before, c.comments_before = []), c.newline_before = !1; return f } function o() { c.tokline = c.line, c.tokcol = c.col, c.tokpos = c.pos } function n(a, b) { var d = c.text.indexOf(a, c.pos); if (b && d == -1) throw A; return d } function i() { return !c.peek() } function h(a) { var b = c.text.charAt(c.pos++); if (a && !b) throw A; b == "\n" ? (c.newline_before = !0, ++c.line, c.col = 0) : ++c.col; return b } function g() { return c.text.charAt(c.pos) } var c = { text: a.replace(/\r\n?|[\n\u2028\u2029]/g, "\n").replace(/^\uFEFF/, ""), pos: 0, tokpos: 0, line: 0, tokline: 0, col: 0, tokcol: 0, newline_before: !1, regex_allowed: !1, comments_before: [] }; O.context = function (a) { a && (c = a); return c }; return O } function z(a, b, c) { return a.type == b && (c == null || a.value == c) } function y(a, b, c, d) { throw new x(a, b, c, d) } function x(a, b, c, d) { this.message = a, this.line = b, this.col = c, this.pos = d; try { ({})() } catch (e) { this.stack = e.stack } } function w(a) { if (g.test(a)) return parseInt(a.substr(2), 16); if (h.test(a)) return parseInt(a.substr(1), 8); if (i.test(a)) return parseFloat(a) } function v(a) { return u(a) || s(a) || q(a) || t(a) || a == "\u200c" || a == "\u200d" } function u(a) { return a == "$" || a == "_" || p(a) } function t(a) { return o.connector_punctuation.test(a) } function s(a) { return o.non_spacing_mark.test(a) || o.space_combining_mark.test(a) } function r(a) { return q(a) || p(a) } function q(a) { a = a.charCodeAt(0); return a >= 48 && a <= 57 } function p(a) { return o.letter.test(a) } var b = M(["break", "case", "catch", "const", "continue", "default", "delete", "do", "else", "finally", "for", "function", "if", "in", "instanceof", "new", "return", "switch", "throw", "try", "typeof", "var", "void", "while", "with"]), c = M(["abstract", "boolean", "byte", "char", "class", "debugger", "double", "enum", "export", "extends", "final", "float", "goto", "implements", "import", "int", "interface", "long", "native", "package", "private", "protected", "public", "short", "static", "super", "synchronized", "throws", "transient", "volatile"]), d = M(["return", "new", "delete", "throw", "else", "case"]), e = M(["false", "null", "true", "undefined"]), f = M(O("+-*&%=<>!?|~^")), g = /^0x[0-9a-f]+$/i, h = /^0[0-7]+$/, i = /^\d*\.?\d*(?:e[+-]?\d*(?:\d\.?|\.?\d)\d*)?$/i, j = M(["in", "instanceof", "typeof", "new", "void", "delete", "++", "--", "+", "-", "!", "~", "&", "|", "^", "*", "/", "%", ">>", "<<", ">>>", "<", ">", "<=", ">=", "==", "===", "!=", "!==", "?", "=", "+=", "-=", "/=", "*=", "%=", ">>=", "<<=", ">>>=", "|=", "^=", "&=", "&&", "||"]), k = M(O(" \n\r\t\u200b")), l = M(O("[{}(,.;:")), m = M(O("[]{}(),;:")), n = M(O("gmsiy")), o = { letter: new RegExp("[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0523\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0621-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971\\u0972\\u097B-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D28\\u0D2A-\\u0D39\\u0D3D\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC\\u0EDD\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8B\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10D0-\\u10FA\\u10FC\\u1100-\\u1159\\u115F-\\u11A2\\u11A8-\\u11F9\\u1200-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u1676\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19A9\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u2094\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2C6F\\u2C71-\\u2C7D\\u2C80-\\u2CE4\\u2D00-\\u2D25\\u2D30-\\u2D65\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31B7\\u31F0-\\u31FF\\u3400\\u4DB5\\u4E00\\u9FC3\\uA000-\\uA48C\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA65F\\uA662-\\uA66E\\uA67F-\\uA697\\uA717-\\uA71F\\uA722-\\uA788\\uA78B\\uA78C\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA90A-\\uA925\\uA930-\\uA946\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAC00\\uD7A3\\uF900-\\uFA2D\\uFA30-\\uFA6A\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]"), non_spacing_mark: new RegExp("[\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065E\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0900-\\u0902\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0955\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F90-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1DC0-\\u1DE6\\u1DFD-\\u1DFF\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F\\uA67C\\uA67D\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE26]"), space_combining_mark: new RegExp("[\\u0903\\u093E-\\u0940\\u0949-\\u094C\\u094E\\u0982\\u0983\\u09BE-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09D7\\u0A03\\u0A3E-\\u0A40\\u0A83\\u0ABE-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0B02\\u0B03\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD7\\u0C01-\\u0C03\\u0C41-\\u0C44\\u0C82\\u0C83\\u0CBE\\u0CC0-\\u0CC4\\u0CC7\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0D02\\u0D03\\u0D3E-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D57\\u0D82\\u0D83\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0F3E\\u0F3F\\u0F7F\\u102B\\u102C\\u1031\\u1038\\u103B\\u103C\\u1056\\u1057\\u1062-\\u1064\\u1067-\\u106D\\u1083\\u1084\\u1087-\\u108C\\u108F\\u109A-\\u109C\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A19-\\u1A1B\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1B04\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43\\u1B44\\u1B82\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1C24-\\u1C2B\\u1C34\\u1C35\\u1CE1\\u1CF2\\uA823\\uA824\\uA827\\uA880\\uA881\\uA8B4-\\uA8C3\\uA952\\uA953\\uA983\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BD-\\uA9C0\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA4D\\uAA7B\\uABE3\\uABE4\\uABE6\\uABE7\\uABE9\\uABEA\\uABEC]"), connector_punctuation: new RegExp("[\\u005F\\u203F\\u2040\\u2054\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF3F]") }; x.prototype.toString = function () { return this.message + " (line: " + this.line + ", col: " + this.col + ", pos: " + this.pos + ")" + "\n\n" + this.stack }; var A = {}, C = M(["typeof", "void", "delete", "--", "++", "!", "~", "-", "+"]), D = M(["--", "++"]), E = function (a, b, c) { while (c < a.length) b[a[c]] = a[c].substr(0, a[c].length - 1), c++; return b } (["+=", "-=", "/=", "*=", "%=", ">>=", "<<=", ">>>=", "|=", "^=", "&="], { "=": !0 }, 0), F = function (a, b) { for (var c = 0, d = 1; c < a.length; ++c, ++d) { var e = a[c]; for (var f = 0; f < e.length; ++f) b[e[f]] = d } return b } ([["||"], ["&&"], ["|"], ["^"], ["&"], ["==", "===", "!=", "!=="], ["<", ">", "<=", ">=", "in", "instanceof"], [">>", "<<", ">>>"], ["+", "-"], ["*", "/", "%"]], {}), G = M(["for", "do", "while", "switch"]), H = M(["atom", "num", "string", "regexp", "name"]); I.prototype.toString = function () { return this.name }; var R = function () { }; a.tokenizer = B, a.parse = J, a.slice = N, a.curry = K, a.member = P, a.array_to_hash = M, a.PRECEDENCE = F, a.KEYWORDS_ATOM = e, a.RESERVED_WORDS = c, a.KEYWORDS = b, a.ATOMIC_START_TOKEN = H, a.OPERATORS = j, a.is_alphanumeric_char = r, a.set_logger = function (a) { R = a } } (UglifyJS)
Jscex = function () { function h(a) { this.r = Jscex.builders[a].binder; this.B = null } function i(a) { this.L = a; this.r = Jscex.builders[a].binder; this.V = !1; this.f = "$$_builder_$$_" + g++ } function k(a) { if (a[0] != "call") return !1; var b = a[1]; if (b[0] != "name" || b[1] != "eval") return !1; a = a[2][0]; if (!a || a[0] != "call") return !1; b = a[1]; if (!b || b[0] != "dot" || b[2] != "compile") return !1; b = b[1]; if (!b || b[0] != "name" || b[1] != "Jscex") return !1; b = a[2][0]; if (!b || b[0] != "string") return !1; a = a[2][1]; if (!a || a[0] != "function") return !1; return !0 } function j(a) { var b = a[2][0][2][0][1]; a = a[2][0][2][1]; var c = (new h(b)).F(a); return (new i(b)).F(a[2], c) } var g = 0; h.prototype = { F: function (a) { a = a[3]; this.B = { type: "delay", c: [] }; this.h(a, this.B.c); return this.B }, N: function (a) { var b = a[0]; if (b == "stat") if (a = a[1], a[0] == "call") { if (b = a[1], b[0] == "name" && b[1] == this.r && a[2].length == 1) return { w: a[2][0], q: "", m: null} } else { if (a[0] == "assign") { var c = a[2]; a = a[3]; if (a[0] == "call" && (b = a[1], b[0] == "name" && b[1] == this.r && a[2].length == 1)) return { w: a[2][0], q: "$$_result_$$", m: c} } } else if (b == "var") { if (a = a[1], a.length == 1 && (a = a[0], c = a[0], (a = a[1]) && a[0] == "call")) if (b = a[1], b[0] == "name" && b[1] == this.r && a[2].length == 1) return { w: a[2][0], q: c, m: null} } else if (b == "return" && (a = a[1]) && a[0] == "call") if (b = a[1], b[0] == "name" && b[1] == this.r && a[2].length == 1) return { w: a[2][0], q: "$$_result_$$", m: "return" }; return null }, h: function (a, b, c) { arguments.length <= 2 && (c = 0); if (c >= a.length) return b.push({ type: "normal" }), this; var d = a[c], e = this.N(d); if (e) { if (d = { type: "bind", info: e }, b.push(d), e.m != "return") d.c = [], this.h(a, d.c, c + 1) } else e = d[0], e == "return" || e == "break" || e == "continue" || e == "throw" ? b.push({ type: e, e: d }) : e == "if" || e == "try" || e == "for" || e == "do" || e == "while" || e == "switch" || e == "for-in" ? (d = this.Q(d), d.type == "raw" ? (b.push(d), this.h(a, b, c + 1)) : c == a.length - 1 ? b.push(d) : (d = { type: "combine", U: { type: "delay", c: [d] }, K: { type: "delay", c: []} }, b.push(d), this.h(a, d.K.c, c + 1))) : (b.push({ type: "raw", e: d }), this.h(a, b, c + 1)); return this }, Q: function (a) { var b = this.R[a[0]]; if (b) return b.call(this, a) }, n: function (a, b) { a[0] == "block" ? this.h(a[1], b) : this.h([a], b) }, j: function (a) { switch (a[a.length - 1].type) { case "normal": case "return": case "break": case "throw": case "continue": return !0 } return !1 }, M: function (a, b) { for (var c = [], d = b; d < a.length; d++) for (var e = a[d][1], f = 0; f < e.length; f++) { if (e[f][0] == "break") return c; c.push(e[f]) } return c }, R: { "for": function (a) { var b = []; this.n(a[4], b); if (this.j(b)) return { type: "raw", e: a }; var c = { type: "delay", c: [] }, d = a[1]; d && c.c.push({ type: "raw", e: d }); b = { type: "loop", t: !1, k: { type: "delay", c: b} }; c.c.push(b); if (d = a[2]) b.s = d; if (a = a[3]) b.update = a; return c }, "for-in": function (a) { var b = "$$_members_$$_" + g, c = "$$_index_$$_" + g, d = "$$_mem_$$_" + g; g++; var e = a[3], f = { type: "delay", c: [] }; f.c.push({ type: "raw", e: ["var", [[b, ["array", []]]]] }); f.c.push({ type: "raw", e: ["for-in", ["var", [[d]]], ["name", [d]], e, ["stat", ["call", ["dot", ["name", b], "push"], [["name", d]]]]] }); f.c.push({ type: "raw", e: ["var", [[c, ["num", 0]]]] }); d = { type: "loop", t: !1, update: ["unary-postfix", "++", ["name", c]], s: ["binary", "<", ["name", c], ["dot", ["name", b], "length"]], k: { type: "delay", c: []} }; f.c.push(d); e = a[2][1]; a[1][0] == "var" ? d.k.c.push({ type: "raw", e: ["var", [[e, ["sub", ["name", b], ["name", c]]]]] }) : d.k.c.push({ type: "raw", e: ["stat", ["assign", !0, ["name", e], ["sub", ["name", b], ["name", c]]]] }); this.n(a[4], d.k.c); return f }, "while": function (a) { var b = []; this.n(a[2], b); if (this.j(b)) return { type: "raw", e: a }; b = { type: "loop", t: !1, k: { type: "delay", c: b} }; b.s = a[1]; return b }, "do": function (a) { var b = []; this.n(a[2], b); if (this.j(b)) return { type: "raw", e: a }; b = { type: "loop", t: !0, k: { type: "delay", c: b} }; b.s = a[1]; return b }, "switch": function (a) { for (var b = !0, c = { type: "switch", item: a[1], C: [] }, d = a[2], e = 0; e < d.length; e++) { var f = { item: d[e][0], c: [] }; c.C.push(f); this.h(this.M(d, e), f.c); b = b && this.j(f.c) } return b ? { type: "raw", e: a} : c }, "if": function (a) { for (var b = !0, c = { type: "if", D: [] }, d = a; ; ) { var e = { S: d[1], c: [] }; c.D.push(e); this.n(d[2], e.c); b = b && this.j(e.c); if ((e = d[3]) && e[0] == "if") d = e; else break } if (e = d[3]) c.v = [], this.n(e, c.v), b = b && this.j(c.v); return b ? { type: "raw", e: a} : c }, "try": function (a) { var b = []; this.h(a[1], b); var c = this.j(b); b = { type: "try", k: { type: "delay", c: b} }; var d = a[2]; if (d) b.T = d[0], b.u = [], this.h(d[1], b.u), c = c && this.j(b.u); if (d = a[3]) b.z = { type: "delay", c: [] }, this.h(d, b.z.c), c = c && this.j(b.z.c); return c ? { type: "raw", e: a} : b } } }; i.prototype = { a: function (a) { this.I.push(a); return this }, F: function (a, b) { this.I = []; this.a("(function (" + a.join(", ") + ") {"); this.a("var " + this.f + " = Jscex.builders[" + JSON.stringify(this.L) + "];"); this.a("return " + this.f + ".Start(this,"); this.d = {}; this.g(b); this.a(");"); this.a("})"); return this.I.join("") }, g: function (a) { this.O[a.type].call(this, a); return this }, b: function (a) { var b = this.P[a[0]]; b && b.call(this, a); return this }, l: function (a) { for (var b = 0; b < a.length; b++) { var c = a[b]; c.type == "raw" || c.type == "if" || c.type == "switch" ? this.g(c) : c.type == "delay" ? this.l(c.c) : this.a("return ").g(c).a(";") } }, p: function (a) { for (var b = 0; b < a.length; b++) { var c = a[b]; this.b(c); switch (c[0]) { case "break": case "return": case "continue": case "throw": return } } }, o: function (a) { this.b(a); return this }, J: function (a) { var b = a[3]; this.a("function " + (a[1] || "") + "(" + a[2].join(", ") + ") {"); a = this.d.A; this.d.A = !0; this.p(b); this.d.A = a; this.a("}") }, O: { delay: function (a) { if (a.c.length == 1) { var b = a.c[0]; switch (b.type) { case "delay": case "combine": case "normal": case "break": case "continue": case "loop": case "try": this.g(b); return; case "return": if (!b.e[1]) { this.g(b); return } } } this.a(this.f + ".Delay(function () {"); this.l(a.c); this.a("})") }, combine: function (a) { this.a(this.f + ".Combine("); this.g(a.U).a(","); this.g(a.K); this.a(")") }, loop: function (a) { this.a(this.f + ".Loop("); a.s ? (this.a("function () {"), this.a("return ").b(a.s).a(";"), this.a("},")) : this.a("null,"); a.update ? (this.a("function () {"), this.b(a.update).a(";"), this.a("},")) : this.a("null,"); this.g(a.k).a(","); this.a(a.t); this.a(")") }, raw: function (a) { this.b(a.e) }, bind: function (a) { var b = a.info; this.a(this.f + ".Bind(").b(b.w).a(", function (" + b.q + ") {"); b.m == "return" ? this.a("return " + this.f + ".Return(" + b.q + ");") : (b.m && this.b(b.m).a(" = " + b.q + ";"), this.l(a.c)); this.a("})") }, "if": function (a) { for (var b = 0; b < a.D.length; b++) { var c = a.D[b]; this.a("if (").b(c.S).a(") {"); this.l(c.c); this.a("} else ") } this.a("{"); a.v ? this.l(a.v) : this.a("return " + this.f + ".Normal();"); this.a("}") }, "switch": function (a) { this.a("switch (").b(a.item).a(") {"); for (var b = 0; b < a.C.length; b++) { var c = a.C[b]; c.item ? this.a("case ").b(c.item).a(":") : this.a("default:"); this.l(c.c) } this.a("}") }, "try": function (a) { this.a(this.f + ".Try("); this.g(a.k).a(","); a.u ? (this.a("function (" + a.T + ") {"), this.l(a.u), this.a("},")) : this.a("null,"); a.z ? this.g(a.z) : this.a("null"); this.a(")") }, normal: function () { this.a(this.f + ".Normal()") }, "throw": function (a) { this.a(this.f + ".Throw(").b(a.e[1]).a(")") }, "break": function () { this.a(this.f + ".Break()") }, "continue": function () { this.a(this.f + ".Continue()") }, "return": function (a) { this.a(this.f + ".Return("); a.e[1] && this.b(a.e[1]); this.a(")") } }, P: { "var": function (a) { this.a("var "); a = a[1]; for (var b = 0; b < a.length; b++) this.a(a[b][0]), a[b].length > 1 && this.a(" = ").b(a[b][1]), b < a.length - 1 && this.a(", "); this.a(";") }, seq: function (a) { for (var b = 1; b < a.length; b++) this.b(a[b]), b < a.length - 1 && this.a(", ") }, binary: function (a) { var b = a[1], c = a[2]; a = a[3]; this.a("(").b(c).a(") "); this.a(b); this.a(" (").b(a).a(")") }, sub: function (a) { var b = a[1]; a = a[2]; this.a("(").b(b).a(")[").b(a).a("]") }, "unary-postfix": function (a) { var b = a[1]; this.b(a[2]).a(b) }, "unary-prefix": function (a) { var b = a[2]; this.a(a[1]).b(b) }, assign: function (a) { var b = a[1], c = a[3]; this.b(a[2]); typeof b == "string" ? this.a(" " + b + "= ") : this.a(" = "); this.b(c) }, stat: function (a) { this.b(a[1]).a(";") }, dot: function (a) { this.a("(").b(a[1]).a(").").a(a[2]) }, "new": function (a) { var b = a[1]; this.a("new ").b(b).a("("); a = a[2]; b = 0; for (var c = a.length; b < c; b++) this.b(a[b]), b < c - 1 && this.a(", "); this.a(")") }, call: function (a) { if (k(a)) this.a(j(a)); else { this.b(a[1]).a("("); a = a[2]; for (var b = 0; b < a.length; b++) this.b(a[b]), b < a.length - 1 && this.a(", "); this.a(")") } }, name: function (a) { this.a(a[1]) }, object: function (a) { this.a("{"); a = a[1]; for (var b = 0; b < a.length; b++) this.a(JSON.stringify(a[b][0]) + ": ").b(a[b][1]), b < a.length - 1 && this.a(", "); this.a("}") }, array: function (a) { this.a("["); a = a[1]; for (var b = 0; b < a.length; b++) this.b(a[b]), b < a.length - 1 && this.a(", "); this.a("]") }, num: function (a) { this.a(a[1]) }, regexp: function (a) { this.a("/" + a[1] + "/" + a[2]) }, string: function (a) { this.a(JSON.stringify(a[1])) }, "function": function (a) { this.J(a) }, defun: function (a) { this.J(a) }, "return": function (a) { this.d.A ? (this.a("return"), (a = a[1]) && this.a(" ").b(a), this.a(";")) : this.a("return ").g({ type: "return", e: a }).a(";") }, "for": function (a) { this.a("for ("); var b = a[1]; b ? (this.b(b), b[0] != "var" ? this.a("; ") : this.a(" ")) : this.a("; "); (b = a[2]) && this.b(b); this.a("; "); (b = a[3]) && this.b(b); this.a(") "); b = this.d.i; this.d.i = !0; this.o(a[4]); this.d.i = b }, "for-in": function (a) { this.a("for ("); var b = a[1]; b[0] == "var" ? this.a("var " + b[1][0][0]) : this.b(b); this.a(" in ").b(a[3]).a(") "); this.o(a[4]) }, block: function (a) { this.a("{"); this.p(a[1]); this.a("}") }, "while": function (a) { var b = a[1]; a = a[2]; var c = this.d.i; this.d.i = !0; this.a("while (").b(b).a(") ").o(a); this.d.i = c }, "do": function (a) { var b = a[1]; a = a[2]; var c = this.d.i; this.d.i = !0; this.a("do ").o(a); this.d.i = c; a[0] == "block" && this.a(" "); this.a("while (").b(b).a(");") }, "if": function (a) { var b = a[1], c = a[2]; this.a("if (").b(b).a(") ").o(c); if (a = a[3]) c[0] == "block" ? this.a(" ") : this.a(""), a[0] == "if" ? this.a("else ").b(a) : this.a("else ").o(a) }, "break": function (a) { this.d.i || this.d.G ? this.a("break;") : this.a("return ").g({ type: "break", e: a }).a(";") }, "continue": function (a) { this.d.i ? this.a("continue;") : this.a("return ").g({ type: "continue", e: a }).a(";") }, "throw": function (a) { var b = this.d; b.H || b.A ? this.a("throw ").b(a[1]).a(";") : this.a("return ").g({ type: "throw", e: a }).a(";") }, conditional: function (a) { this.a("(").b(a[1]).a(") ? (").b(a[2]).a(") : (").b(a[3]).a(")") }, "try": function (a) { this.a("try {"); var b = this.d.H; this.d.H = !0; this.p(a[1]); this.d.H = b; b = a[2]; a = a[3]; b && (this.a("} catch (" + b[0] + ") {"), this.p(b[1])); a && (this.a("} finally {"), this.p(a)); this.a("}") }, "switch": function (a) { this.a("switch (").b(a[1]).a(") {"); var b = this.d.G; this.d.G = !0; a = a[2]; for (var c = 0; c < a.length; c++) { var d = a[c]; d[0] ? this.a("case ").b(d[0]).a(":") : this.a("default:"); this.p(d[1]) } this.d.G = b; this.a("}") } } }; return { config: {}, compile: function (a, b) { var c = b.toString(); c = "eval(Jscex.compile(" + JSON.stringify(a) + ", " + c + "))"; c = UglifyJS.parse(c)[1][0][1]; c = j(c); var d = Jscex.config.codeGenerator; return d ? d(c) : c }, builders: {}} } (); if ((typeof Jscex) == "undefined") { Jscex = { "builders": {} }; }
Jscex.builderBase = { "Loop": function (condition, update, body, bodyFirst) {
    return { "next": function (_this, callback) {
        var nextBody = function (skipUpdate) { body.next(_this, function (type, value, target) { if (type == "normal" || type == "continue") { loop(skipUpdate); } else if (type == "throw" || type == "return") { callback(type, value); } else if (type == "break") { callback("normal"); } else { throw 'Invalid type for "Loop": ' + type; } }); }
        var loop = function (skipUpdate) {
            try {
                if (update && !skipUpdate) { update.call(_this); }
                if (!condition || condition.call(_this)) { nextBody(false); } else { callback("normal"); } 
            } catch (ex) { callback("throw", ex); } 
        }
        if (bodyFirst) { nextBody(true); } else { loop(true); } 
    } 
    };
}, "Delay": function (generator) { return { "next": function (_this, callback) { try { var step = generator.call(_this); step.next(_this, callback); } catch (ex) { callback("throw", ex); } } }; }, "Combine": function (s1, s2) { return { "next": function (_this, callback) { s1.next(_this, function (type, value, target) { if (type == "normal") { try { s2.next(_this, callback); } catch (ex) { callback("throw", ex); } } else { callback(type, value, target); } }); } }; }, "Return": function (result) { return { "next": function (_this, callback) { callback("return", result); } }; }, "Normal": function () { return { "next": function (_this, callback) { callback("normal"); } }; }, "Break": function () { return { "next": function (_this, callback) { callback("break"); } }; }, "Continue": function () { return { "next": function (_this, callback) { callback("continue"); } }; }, "Throw": function (ex) { return { "next": function (_this, callback) { callback("throw", ex); } }; }, "Try": function (tryTask, catchGenerator, finallyTask) {
    return { "next": function (_this, callback) {
        tryTask.next(_this, function (type, value, target) {
            if (type != "throw" || !catchGenerator) { if (!finallyTask) { callback(type, value, target); } else { finallyTask.next(_this, function (finallyType, finallyValue, finallyTarget) { if (finallyType == "normal") { callback(type, value, target); } else { callback(finallyType, finallyValue, finallyTarget); } }); } } else {
                if (catchGenerator) {
                    var catchTask; try { catchTask = catchGenerator.call(_this, value); } catch (ex) { if (finallyTask) { finallyTask.next(_this, function (finallyType, finallyValue, finallyTarget) { if (finallyType == "normal") { callback("throw", ex); } else { callback(finallyType, finallyValue, finallyTarget); } }); } else { callback("throw", ex); } }
                    if (catchTask) { catchTask.next(_this, function (catchType, catchValue, catchTarget) { if (catchType == "throw") { if (finallyTask) { finallyTask.next(_this, function (finallyType, finallyValue, finallyTarget) { if (finallyType == "normal") { callback(catchType, catchValue, catchTarget); } else { callback(finallyType, finallyValue, finallyTarget); } }); } else { callback(catchType, catchValue, catchTarget); } } else { if (finallyTask) { finallyTask.next(_this, function (finallyType, finallyValue, finallyTarget) { if (finallyType == "normal") { callback(catchType, catchValue, catchTarget); } else { callback(finallyType, finallyValue, finallyTarget); } }); } else { callback(catchType, catchValue, catchTarget); } } }); } 
                } else { finallyTask.next(_this, function (finallyType, finallyValue, finallyTarget) { if (finallyType == "normal") { callback(type, value, target); } else { callback(finallyType, finallyValue, finallyTarget); } }); } 
            } 
        });
    } 
    };
} 
}; Jscex.Async = {}; Jscex.Async.Task = function (delegate) { this._delegate = delegate; this._handlers = []; this.status = "ready"; }
Jscex.Async.Task.prototype = { start: function () {
    if (this.status != "ready") { throw 'Task can only be started in "ready" status.'; }
    var _this = this; this.status = "running"; this._delegate["onStart"](function (type, value) {
        if (_this.status != "running") { throw ('Callback can only be used in "running" status.'); }
        if (type == "success") { _this.result = value; _this.status = "succeeded"; } else if (type == "failure") { _this.error = value; _this.status = "failed"; } else if (type == "cancel") { _this.status = "canceled"; } else { throw ("Unsupported type: " + type); }
        _this._notify();
    });
}, cancel: function () {
    if (this.status != "running") { throw 'Task can only be canceled in "running" status'; }
    var onCancel = this._delegate["onCancel"]; if (onCancel) onCancel(); this._notify();
}, _notify: function () { var handlers = this._handlers; delete this._handlers; for (var i = 0; i < handlers.length; i++) { handlers[i](this); } }, addListener: function (handler) {
    if (!this._handlers) { throw ('Listeners can only be added in "ready" or "running" status.'); }
    this._handlers.push(handler);
} 
}; (function () {
    var AsyncBuilder = function () { }
    AsyncBuilder.prototype = { "binder": "$await", "Start": function (_this, task) { var delegate = { "onStart": function (callback) { task.next(_this, function (type, value, target) { if (type == "normal" || type == "return") { callback("success", value); } else if (type == "throw") { callback("failure", value); } else { throw "Unsupported type: " + type; } }); } }; return new Jscex.Async.Task(delegate); }, "Bind": function (task, generator) {
        return { "next": function (_this, callback) {
            var onComplete = function (t) {
                if (t.status == "succeeded") {
                    var nextTask; try { nextTask = generator.call(_this, task.result); } catch (ex) { callback("throw", ex); return; }
                    nextTask.next(_this, callback);
                } else { callback("throw", task.error); } 
            }
            if (task.status == "ready") { task.addListener(onComplete); task.start(); } else if (task.status == "running") { task.addListener(onComplete); } else { onComplete(task); } 
        } 
        };
    } 
    }
    for (var m in Jscex.builderBase) { AsyncBuilder.prototype[m] = Jscex.builderBase[m]; }
    Jscex.builders["async"] = new AsyncBuilder(); var async = Jscex.Async; async.sleep = function (delay) { var id; var delegate = { "onStart": function (callback) { id = setTimeout(function () { callback("success"); }, delay); }, "onCancel": function () { clearTimeout(id); } }; return new Jscex.Async.Task(delegate); }
    async.onEvent = function (ele, ev) {
        var eventName = "on" + ev; var delegate = { "onStart": function (callback) {
            var handler = function (ev) { ele[eventName] = null; callback("success", ev); }
            ele[eventName] = handler;
        }, "onCancel": function () { ele[eventName] = null; } 
        }; return new Jscex.Async.Task(delegate);
    }
    async.parallel = function (tasks) {
        var delegate = { "onStart": function (callback) {
            var tasksClone = []; for (var i = 0; i < tasks.length; i++) { var t = tasks[i]; t._p_idx = i; tasksClone.push(t); }
            var finished = false; var runningNumber = tasksClone.length; var results = []; var taskCompleted = function (t) { if (finished) return; if (t.status == "failed") { finished = true; callback("failure", { task: t }); } else if (t.status == "succeeded") { results[t._p_idx] = t.result; runningNumber--; if (runningNumber == 0) { finished = true; callback("success", results); } } }
            for (var i = 0; i < tasksClone.length; i++) { var t = tasksClone[i]; switch (t.status) { case "failed": case "succeeded": taskCompleted(t); break; case "running": t.addListener(taskCompleted); break; case "ready": t.addListener(taskCompleted); t.start(); break; } } 
        } 
        }; return new Jscex.Async.Task(delegate);
    } 
})(); var JSON; JSON || (JSON = {}), function () { function str(a, b) { var c, d, e, f, g = gap, h, i = b[a]; i && typeof i == "object" && typeof i.toJSON == "function" && (i = i.toJSON(a)), typeof rep == "function" && (i = rep.call(b, a, i)); switch (typeof i) { case "string": return quote(i); case "number": return isFinite(i) ? String(i) : "null"; case "boolean": case "null": return String(i); case "object": if (!i) return "null"; gap += indent, h = []; if (Object.prototype.toString.apply(i) === "[object Array]") { f = i.length; for (c = 0; c < f; c += 1) h[c] = str(c, i) || "null"; e = h.length === 0 ? "[]" : gap ? "[\n" + gap + h.join(",\n" + gap) + "\n" + g + "]" : "[" + h.join(",") + "]", gap = g; return e } if (rep && typeof rep == "object") { f = rep.length; for (c = 0; c < f; c += 1) typeof rep[c] == "string" && (d = rep[c], e = str(d, i), e && h.push(quote(d) + (gap ? ": " : ":") + e)) } else for (d in i) Object.prototype.hasOwnProperty.call(i, d) && (e = str(d, i), e && h.push(quote(d) + (gap ? ": " : ":") + e)); e = h.length === 0 ? "{}" : gap ? "{\n" + gap + h.join(",\n" + gap) + "\n" + g + "}" : "{" + h.join(",") + "}", gap = g; return e } } function quote(a) { escapable.lastIndex = 0; return escapable.test(a) ? '"' + a.replace(escapable, function (a) { var b = meta[a]; return typeof b == "string" ? b : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4) }) + '"' : '"' + a + '"' } function f(a) { return a < 10 ? "0" + a : a } "use strict", typeof Date.prototype.toJSON != "function" && (Date.prototype.toJSON = function (a) { return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + f(this.getUTCMonth() + 1) + "-" + f(this.getUTCDate()) + "T" + f(this.getUTCHours()) + ":" + f(this.getUTCMinutes()) + ":" + f(this.getUTCSeconds()) + "Z" : null }, String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function (a) { return this.valueOf() }); var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, gap, indent, meta = { "\b": "\\b", "\t": "\\t", "\n": "\\n", "\f": "\\f", "\r": "\\r", '"': '\\"', "\\": "\\\\" }, rep; typeof JSON.stringify != "function" && (JSON.stringify = function (a, b, c) { var d; gap = "", indent = ""; if (typeof c == "number") for (d = 0; d < c; d += 1) indent += " "; else typeof c == "string" && (indent = c); rep = b; if (b && typeof b != "function" && (typeof b != "object" || typeof b.length != "number")) throw new Error("JSON.stringify"); return str("", { "": a }) }), typeof JSON.parse != "function" && (JSON.parse = function (text, reviver) { function walk(a, b) { var c, d, e = a[b]; if (e && typeof e == "object") for (c in e) Object.prototype.hasOwnProperty.call(e, c) && (d = walk(e, c), d !== undefined ? e[c] = d : delete e[c]); return reviver.call(a, b, e) } var j; text = String(text), cx.lastIndex = 0, cx.test(text) && (text = text.replace(cx, function (a) { return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4) })); if (/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) { j = eval("(" + text + ")"); return typeof reviver == "function" ? walk({ "": j }, "") : j } throw new SyntaxError("JSON.parse") }) } ()
Jscex.config.codeGenerator = function (code) { return "false || " + code; }