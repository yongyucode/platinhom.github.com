
Package: mingw-developer-toolkit                         Subsystem: msys
Components: bin

An MSYS Installation for MinGW Developers (meta)
------------------------------------------------

This  meta  package  contains  the  components  necessary  to  create  a
relatively   complete   MSYS   installation   suitable  for  most  MinGW
developers' needs. It includes the msys-base  system,  as  well  as  the
autotools   (autoconf,   automake,   libtool,   gettext,  and  libiconv)
configured for use in maintaining  and  building  native  win32  (MinGW)
programs.  It  includes m4, perl, vim, patch, cvs, guile, mktemp, bison,
flex, lndir, and other useful  command  line  tools.  It  also  includes
networking clients for ssh, rsh, telnet, and ftp protocols. 

Note that, for certain esoteric reasons, some of the packages  installed
by this meta package are MSYS packages, and install, as expected, in the
/ == /usr directory (that  is,  into  C:\msys\1.0,  or  whatever  you've
chosen  as  the  "root" MSYS path). However, it also includes some MinGW
packages: the autotools are technically configured for  MinGW,  and  are
installed  into the /mingw directory (that is, into C:\MinGW or whatever
you've chosen as the "root" MinGW path). 


Package: mingw32-autoconf                             Subsystem: mingw32
Components: bin, lic

Wrapper scripts for autoconf commands
-------------------------------------

Autoconf is an extensible  package  of  M4  macros  that  produce  shell
scripts  to automatically configure software source code packages. These
scripts can adapt the  packages  to  many  kinds  of  UNIX-like  systems
without  manual  user  intervention.  Autoconf  creates  a configuration
script for a package from a  template  file  that  lists  the  operating
system features that the package can use, in the form of M4 macro calls.
However, THIS package is actually a simple wrapper,  that  automatically
redirects  to  either  autoconf-2.13  or  autoconf-2.6x,  as  needed  or
requested. 


Package: mingw32-autoconf2.1                          Subsystem: mingw32
Components: bin, doc, lic

Automatic Configure Script Builder (2.1x series)
------------------------------------------------

Autoconf is an extensible  package  of  M4  macros  that  produce  shell
scripts  to automatically configure software source code packages. These
scripts can adapt the  packages  to  many  kinds  of  UNIX-like  systems
without  manual  user  intervention.  Autoconf  creates  a configuration
script for a package from a  template  file  that  lists  the  operating
system features that the package can use, in the form of M4 macro calls.
This package provides the latest implementation of autoconf in the  2.1x
series. 


Package: mingw32-autoconf2.5                          Subsystem: mingw32
Components: bin, doc, lic

Automatic Configure Script Builder (2.5x/2.6x series)
-----------------------------------------------------

Autoconf is an extensible  package  of  M4  macros  that  produce  shell
scripts  to automatically configure software source code packages. These
scripts can adapt the  packages  to  many  kinds  of  UNIX-like  systems
without  manual  user  intervention.  Autoconf  creates  a configuration
script for a package from a  template  file  that  lists  the  operating
system features that the package can use, in the form of M4 macro calls.
This package provides the  latest  implementation  of  autoconf  in  the
2.5x/2.6x series. 


Package: mingw32-automake                             Subsystem: mingw32
Components: bin, lic

Wrapper scripts for automake and aclocal
----------------------------------------

Automake is  a  tool  for  automatically  generating  Makefile.in  files
compliant  with  the  GNU Coding Standards. Automake requires the use of
Autoconf. However, THIS package  is  actually  a  simple  wrapper,  that
automatically  redirects  to  one  of  the  automake-[1.4  through 1.11]
applications as needed or requested. 


Package: mingw32-automake1.10                         Subsystem: mingw32
Components: bin, doc, lic

Automatic Makefile Builder (1.10 series)
----------------------------------------

Automake is  a  tool  for  automatically  generating  Makefile.in  files
compliant  with  the  GNU Coding Standards. Automake requires the use of
Autoconf. This package provides the latest implementation of automake in
the 1.10 series. 


Package: mingw32-automake1.11                         Subsystem: mingw32
Components: bin, doc, lic

Automatic Makefile Builder (1.11 series)
----------------------------------------

Automake is  a  tool  for  automatically  generating  Makefile.in  files
compliant  with  the  GNU Coding Standards. Automake requires the use of
Autoconf. This package provides the latest implementation of automake in
the 1.11 series. 


Package: mingw32-automake1.4                          Subsystem: mingw32
Components: bin, doc, lic

Automatic Makefile Builder (1.4 series)
---------------------------------------

Automake is  a  tool  for  automatically  generating  Makefile.in  files
compliant  with  the  GNU Coding Standards. Automake requires the use of
Autoconf. This package provides the latest implementation of automake in
the 1.4 series. 


Package: mingw32-automake1.5                          Subsystem: mingw32
Components: bin, doc, lic

Automatic Makefile Builder (1.5 series)
---------------------------------------

Automake is  a  tool  for  automatically  generating  Makefile.in  files
compliant  with  the  GNU Coding Standards. Automake requires the use of
Autoconf. This package provides the latest implementation of automake in
the 1.5 series. 


Package: mingw32-automake1.6                          Subsystem: mingw32
Components: bin, doc, lic

Automatic Makefile Builder (1.6 series)
---------------------------------------

Automake is  a  tool  for  automatically  generating  Makefile.in  files
compliant  with  the  GNU Coding Standards. Automake requires the use of
Autoconf. This package provides the latest implementation of automake in
the 1.6 series. 


Package: mingw32-automake1.7                          Subsystem: mingw32
Components: bin, doc, lic

Automatic Makefile Builder (1.7 series)
---------------------------------------

Automake is  a  tool  for  automatically  generating  Makefile.in  files
compliant  with  the  GNU Coding Standards. Automake requires the use of
Autoconf. This package provides the latest implementation of automake in
the 1.7 series. 


Package: mingw32-automake1.8                          Subsystem: mingw32
Components: bin, doc, lic

Automatic Makefile Builder (1.8 series)
---------------------------------------

Automake is  a  tool  for  automatically  generating  Makefile.in  files
compliant  with  the  GNU Coding Standards. Automake requires the use of
Autoconf. This package provides the latest implementation of automake in
the 1.8 series. 


Package: mingw32-automake1.9                          Subsystem: mingw32
Components: bin, doc, lic

Automatic Makefile Builder (1.9 series)
---------------------------------------

Automake is  a  tool  for  automatically  generating  Makefile.in  files
compliant  with  the  GNU Coding Standards. Automake requires the use of
Autoconf. This package provides the latest implementation of automake in
the 1.9 series. 


Package: mingw32-autotools                            Subsystem: mingw32
Components: bin

The GNU Autotools for MinGW Development (meta)
----------------------------------------------

This meta package contains the components necessary to maintain packages
that  use  the  GNU  Build  System.  These  components include autoconf,
automake, libtool, libiconv, and gettext -- plus their pre-requisites. 

Although the autotools consist primarily of perl, shell, and m4 scripts,
and  thus requires MSYS-based interpreters, these implementations should
be installed into the  /mingw  directory  (that  is,  into  C:\MinGW  or
whatever  you've  chosen  as the "root" MinGW path). Most developers who
need the autotools will want the versions provided by this package,  and
not  the  MSYS  ones  provided  by  the MSYS System Builder (msys-dvlpr)
package; the MSYS ones install into the / == /usr  directory  (that  is,
into  C:\msys\1.0) and are intended for use when developing applications
that use the MSYS runtime. 


Package: mingw32-base                                 Subsystem: mingw32
Components: bin

A Basic MinGW Installation
--------------------------

This meta package provides a basic GCC installation, and includes the  C
compiler,  linker  and  other  binary  tools,  the runtime libraries and
windows API support, mingw32-make, and a debugger. Other components  can
be added manually as needed. 


Package: mingw32-basic-bsdtar                         Subsystem: mingw32
Components: bin

standalone version of bsdtar
----------------------------

The mingw32-basic-bsdtar package provides an  implementation  of  tar(1)
for  native Win32 platforms that is statically linked -- that is, has no
dependencies on external DLLs other than those  provided  by  the  Win32
platform.  basic-bsdtar  has  somewhat limited functionality compared to
the  other  versions  of  bsdtar  provided  by  the  MinGW/MSYS  project
(msys-bsdtar  and  mingw32-bsdtar). However, it supports tar archives in
the ustar, pax, and gnutar formats, compressed using gzip, bzip2,  lzma,
or xz. 


Package: mingw32-binutils                             Subsystem: mingw32
Components: bin, dev, doc, info, lang, man

The GNU Binary File Utilities
-----------------------------

This is a required component of the MinGW Compiler Suite. 

This package provides the GNU assembler, linker, archive librarian,  and
other utilities for manipulating object format files. 

This package is enhanced by the libiconv and gettext  DLL  if  they  are
installed. It does not require them to operate. 


Package: mingw32-bsdcpio                              Subsystem: mingw32
Components: bin

BSD version of the cpio utility
-------------------------------

The mingw32-bsdcpio package provides an implementation of cpio(1)  based
on libarchive, which copies files between archives and directories. This
implementation can extract from tar, pax, cpio, zip, jar, ar,  xar,  and
ISO  9660  cdrom  images, as well as create tar, pax, cpio, ar, and shar
archives. It supports automatic detection and  handling  of  .gz,  .bz2,
.lzma,  .xz, and .Z decompression (and compression). It supports the old
POSIX.1 portable cpio format (odc), the new SVR4  portable  cpio  format
(newc), as well as the POSIX.1 pax and ustar formats. 

This MinGW port of bsdcpio differs from the MSYS version  also  provided
by  the  MinGW/MSYS  project.  This  version  does  not require the MSYS
runtime library, but does not support MSYS "unix"  style  pathnames  nor
mtree  data.  It  does not support archives that contain symbolic links.
Both mingw32-bsdcpio and msys-bsdcpio depend on additional DLLs such  as
mingw32-libarchive (msys-libarchive), etc. 

libarchive is a programming library that can  create  and  read  several
different streaming archive formats, including most popular tar variants
and several cpio formats, and ar archives. It can also read  shar,  zip,
jar, and xar archives, as well as ISO9660 CDROM images. It automatically
handles  gzip,  bzip2,  compress,   xz,   and   lzma   compression   and
decompression,  as well as uudecode decompression. The bsdtar program is
an implementation of tar(1) that is built on top of libarchive. 

The mingw32-bsdcpio package provides an implementation of cpio(1)  based
on  libarchive,  while  the associated mingw32-bsdtar package provides a
similar implementation  of  tar(1).  The  associated  mingw32-libarchive
package   provides   the   runtime   library,   development  files,  and
documentation. 


Package: mingw32-bsdtar                               Subsystem: mingw32
Components: bin

BSD version of the tar utility
------------------------------

The mingw32-bsdtar package provides an implementation of tar(1) based on
libarchive,  which  manipulates streaming archive files -- including the
eponymous tar format. However, bsdtar can also extract  from  tar,  pax,
cpio,  zip,  jar,  ar, xar, and ISO 9660 cdrom images, as well as create
tar, pax, cpio, ar, and shar archives. It supports  automatic  detection
and  handling  of  .gz,  .bz2,  .lzma,  .xz,  and  .Z decompression (and
compression). It supports ustar, pax, and GNU tar formats. 

This MinGW port of bsdtar differs from the MSYS version also provided by
the  MinGW/MSYS  project. This version does not require the MSYS runtime
library, but does not support MSYS  "unix"  style  pathnames  nor  mtree
data.  It  does  not  support archives that contain symbolic links. Both
mingw32-bsdtar  and  msys-bsdtar  depend  on  additional  DLLs  such  as
mingw32-libarchive  (msys-libarchive),  etc.  There  is,  in addition, a
MinGW package that provides a standalone version of bsdtar which has  no
external     dependencies     and     only     limited    functionality:
mingw32-basic-bsdtar (see its documentation for more information). 

libarchive is a programming library that can  create  and  read  several
different streaming archive formats, including most popular tar variants
and several cpio formats, and ar archives. It can also read  shar,  zip,
jar, and xar archives, as well as ISO9660 CDROM images. It automatically
handles  gzip,  bzip2,  compress,   xz,   and   lzma   compression   and
decompression,  as well as uudecode decompression. The bsdtar program is
an implementation of tar(1) that is built on top of libarchive. 

The mingw32-bsdtar package provides an implementation of tar(1) based on
libarchive,  while  the  associated  mingw32-bsdcpio  package provides a
similar implementation of  cpio(1).  The  associated  mingw32-libarchive
package   provides   the   runtime   library,   development  files,  and
documentation. 


Package: mingw32-bzip2                                Subsystem: mingw32
Components: bin, dev, doc, lic, man

a high-quality data compressor
------------------------------

bzip2 is a freely available, patent free (see below), high-quality  data
compressor.  It  typically  compresses files to within 10% to 15% of the
best available techniques (the PPM family of  statistical  compressors),
whilst being around twice as fast at compression and six times faster at
decompression. This package  provides  the  utility  programs,  scripts,
documentation,  and  development  files.  The  associated mingw32-libbz2
package provides the runtime library. 


Package: mingw32-dos2unix                             Subsystem: mingw32
Components: bin, doc, lic

Convert line breaks between Unix, Dos, and Mac
----------------------------------------------

The dos2unix package provides manipulation utilities for converting  the
line  break characters of text files between the unix convention (0x0a),
the DOS/Windows convention (0x0d  0x0a),  and  the  old  (pre-OS-X)  Mac
convention (0x0d). 


Package: mingw32-expat                                Subsystem: mingw32
Components: bin, doc, lic, man

XML parsing library written in C
--------------------------------

expat is a C library for parsing XML written by James Clark. Expat is  a
stream-oriented  XML  parser. This means that you register handlers with
the parser before starting the parse. These handlers are called when the
parser discovers the associated structures in the document being parsed.
A start tag is an example of the kind of structures for  which  you  may
register handlers. 

The  mingw32-expat  package  provides  the  xmlwf  validation  tool  and
documentation  related  to  the library. The associated mingw32-libexpat
package provides the runtime library and related development files. 


Package: mingw32-gcc                                  Subsystem: mingw32
Components: bin, dev, doc, info, lang, lic, man

The GNU C Compiler
------------------

This package provides the MinGW implementation of  the  GNU  C  language
compiler;  this  includes  the  C  preprocessor, and the common back end
processors which are necessary to support all other  language  compilers
in the GNU Compiler Collection. 

This is a required component of the MinGW Compiler Suite. 


Package: mingw32-gcc-ada                              Subsystem: mingw32
Components: bin, dev, info

The GNU Ada Compiler
--------------------

This package provides the MinGW implementation of the GNU  Ada  language
compiler. 

This is an optional component of the MinGW Compiler Suite;  you  require
it only if you wish to compile programs written in the Ada language. 


Package: mingw32-gcc-fortran                          Subsystem: mingw32
Components: bin, dev, doc, info, man

The GNU FORTRAN Compiler
------------------------

This package provides  the  MinGW  implementation  of  the  GNU  FORTRAN
language compiler. 

This is an optional component of the MinGW Compiler Suite;  you  require
it only if you wish to compile programs written in the FORTRAN language.



Package: mingw32-gcc-g++                              Subsystem: mingw32
Components: bin, dev, doc, man

The GNU C++ Compiler
--------------------

This package provides the MinGW implementation of the GNU  C++  language
compiler. 

This is an optional component of the MinGW Compiler Suite;  you  require
it only if you wish to compile programs written in the C++ language. 


Package: mingw32-gcc-objc                             Subsystem: mingw32
Components: bin, dev

The GNU Objective-C Compiler
----------------------------

This package provides the MinGW implementation of  the  GNU  Objective-C
language compiler. 

This is an optional component of the MinGW Compiler Suite;  you  require
it  only  if  you  wish  to  compile programs written in the Objective-C
language. 

NOTE: As of the gcc-4.8.1 release in order to install objc you  need  to
install  the gcc-objc-%-mingw32-dev package instead of the -bin package.
This change was made to be consistent with what  -bin  usually  contains
compared to -dev. 


Package: mingw32-gcc-tools-epoch2-autoconf            Subsystem: mingw32
Components: bin, doc, lic

special autoconf for gcc development
------------------------------------

Gcc requires that an unpatched, pristine version  of  autoconf  be  used
when  preparing patches for official submission. For various reasons [1]
these   pristine   versions   cannot   coexist   with    the    existing
mingw32-autoconf packages in /mingw. This package provides autoconf-2.64
and installs into /mingw/opt/gcc-tools/epoch2/{bin,share} for  use  when
developing  gcc-4.5.x  and  gcc-4.6.x.  It  is  also  used when building
gettext-0.18.1.1. 

gcc-4.3.x and gcc-4.4.x development requires autoconf-2.59 

gcc-4.5.x and gcc-4.6.x development requires autoconf-2.64 

[1] http://cygwin.com/ml/cygwin-apps/2009-01/msg00007.html 

Autoconf is an extensible  package  of  M4  macros  that  produce  shell
scripts  to automatically configure software source code packages. These
scripts can adapt the  packages  to  many  kinds  of  UNIX-like  systems
without  manual  user  intervention.  Autoconf  creates  a configuration
script for a package from a  template  file  that  lists  the  operating
system features that the package can use, in the form of M4 macro calls.



Package: mingw32-gcc-tools-epoch2-automake            Subsystem: mingw32
Components: bin, doc, lic

special automake for gcc development
------------------------------------

Gcc requires that an unpatched, pristine version  of  automake  be  used
when  preparing patches for official submission. For various reasons [1]
these   pristine   versions   cannot   coexist   with    the    existing
mingw32-automake packages in /mingw. This package provides automake-1.11
and installs into /mingw/opt/gcc-tools/epoch2/{bin,share} for  use  when
developing  gcc-4.5.x  and  gcc-4.6.x.  It  is  also  used when building
gettext-0.18.1.1. 

gcc-4.3.x and gcc-4.4.x development requires the latest release  in  the
automake-1.9.x series. 

gcc-4.5.x and gcc-4.6.x development requires the latest release  in  the
automake-1.11.x series. 

[1] http://cygwin.com/ml/cygwin-apps/2009-01/msg00007.html 

Automake is  a  tool  for  automatically  generating  Makefile.in  files
compliant  with  the  GNU Coding Standards. Automake requires the use of
Autoconf. 


Package: mingw32-gcc-v3-ada                           Subsystem: mingw32
Components: bin

The GNU Ada Compiler
--------------------

This package provides the MinGW implementation of the GNU  Ada  language
compiler for GCC Version 3. 

This is an optional component of the MinGW Compiler Suite;  you  require
it  only  if  you  use  GCC  Version 3, and you wish to compile programs
written in the Ada language. 


Package: mingw32-gcc-v3-core                          Subsystem: mingw32
Components: bin

The GNU C Compiler
------------------

This package is specific to Version 3 of the GNU Compiler Collection; it
provides  the  MinGW implementation of the GNU C language compiler; this
includes the C preprocessor, and the common back  end  processors  which
are  necessary  to  support  all  other  language  compilers  in the GNU
Compiler Collection. 

This is a required component of the  MinGW  Compiler  Suite,  for  those
users who continue the use GCC Version 3. 


Package: mingw32-gcc-v3-fortran                       Subsystem: mingw32
Components: bin

The GNU FORTRAN Compiler
------------------------

This package provides  the  MinGW  implementation  of  the  GNU  FORTRAN
language compiler for GCC Version 3. 

This is an optional component of the MinGW Compiler Suite;  you  require
it  only  if  you  use  GCC  Version 3, and you wish to compile programs
written in the FORTRAN language. 


Package: mingw32-gcc-v3-g++                           Subsystem: mingw32
Components: bin

The GNU C++ Compiler
--------------------

This package provides the MinGW implementation of the GNU  C++  language
compiler for GCC Version 3. 

This is an optional component of the MinGW Compiler Suite;  you  require
it  only  if  you  use  GCC  Version 3, and you wish to compile programs
written in the C++ language. 


Package: mingw32-gcc-v3-java                          Subsystem: mingw32
Components: bin

The GNU Java Compiler
---------------------

This package provides the MinGW implementation of the GNU Java  language
compiler for GCC Version 3. 

This is an optional component of the MinGW Compiler Suite;  you  require
it  only  if  you  use  GCC  Version 3, and you wish to compile programs
written in the Java language. 


Package: mingw32-gcc-v3-objc                          Subsystem: mingw32
Components: bin

The GNU Objective-C Compiler
----------------------------

This package provides the MinGW implementation of  the  GNU  Objective-C
language compiler for GCC Version 3. 

This is an optional component of the MinGW Compiler Suite;  you  require
it  only  if  you  use  GCC  Version 3, and you wish to compile programs
written in the Objective-C language. 


Package: mingw32-gdb                                  Subsystem: mingw32
Components: bin, doc, info, lang, lic, man

The GNU Source-Level Debugger
-----------------------------

GDB is a source-level debugger, capable  of  breaking  programs  at  any
specific  line, displaying variable values, and determining where errors
occurred. Currently, it works for C, C++, Fortran,  Modula  2  and  Java
programs. A must-have for any serious programmer. 


Package: mingw32-gdb-python                           Subsystem: mingw32
Components: bin, doc

Python enabled GNU Source-Level Debugger
----------------------------------------

GDB is a source-level debugger, capable  of  breaking  programs  at  any
specific  line, displaying variable values, and determining where errors
occurred. Currently, it works for C, C++, Fortran,  Modula  2  and  Java
programs.  A  must-have  for  any  serious  programmer.  This particular
version is Python enabled. 


Package: mingw32-gendef                               Subsystem: mingw32
Components: bin, doc, lic

Generate .def files for DLLs
----------------------------

gendef can extract information from DLLs to  create  corresponding  .def
files  that  list the symbols available in each DLL. .def files can then
be used by dlltool  (mingw32-binutils)  to  generate  import  libraries.
gendef  is  similar  to  pexports,  but the two tools differ in how each
determines the "decoration" (or calling convention) appropriate for each
symbol, since that information is not always available directly from the
DLL's symbol table. gendef locates the symbol's code  in  the  DLL,  and
uses  a disassembler to determine that information. pexports can use a C
pre-processor  to  extract  the  information,  provided  you  have   the
appropriate header files. Neither method is foolproof, so both tools are
provided. 

gendef was written by the MinGW64 team.  It  can  extract  symbols  from
32bit  or  64bit  EXEs  or  DLLs.  It  can automatically detect stdcall,
fastcall, and cdecl  calling  conventions  and  generate  the  correctly
decorated  function  names,  without  requiring  the header files or a C
pre-processor. 


Package: mingw32-gettext                              Subsystem: mingw32
Components: bin, dev, dll, doc, ext, html, info, lic, man

GNU Internationalization Library and Utilities
----------------------------------------------

GNU gettext provides a set of tools that  create  a  framework  to  help
other  GNU  packages  produce  multi-lingual messages. In this way, with
suitable care a single binary application can automatically provide user
messages  (such  as  `help'  text)  in the language corresponding to the
current locale settings. 

The gettext package provides utilities that may be useful to  end-users,
allowing  interaction  with  the  message  translation database of other
i18n-enabled GNU utilities. It also provides the development  libraries,
header  files,  and  documentation  for  the  gettext system, as well as
additional   utilities   useful   for   maintainers   of    i18n-enabled
applications.  The  *-ext  package  provides extra documentation, in the
form of example implementations in many  different  computer  languages.
The  associated  libgettextpo  package  provides  the  runtime libraries
needed by the gettext  utilities;  the  associated  libasprintf  package
provides  the  runtime  library  for  the  asprintf utility library; and
finally, the associated libintl package provides the  runtime  component
of the internationalization library itself. 


Package: mingw32-gmp                                  Subsystem: mingw32
Components: dev, doc, info, lic

The GNU Multiple Precision Arithmetic Library
---------------------------------------------

GNU MP is a library for arbitrary  precision  arithmetic,  operating  on
signed  integers, rational numbers, and floating point numbers. It has a
rich set of functions, and the functions have a regular interface. 

The MinGW/MSYS project provides  two  gmp  packages:  the  native  win32
mingw32-gmp  and an MSYS version, msys-gmp. mingw32-gmp is provided as a
necessary component of modern MinGW gcc compilers,  while  the  msys-gmp
version  requires  the  MSYS  dll,  and is provided as a prerequisite of
certain other MSYS tools, such as guile. 

The mingw32-gmp package provides the documentation for the gmp  library,
as  well as the related development files. The associated mingw32-libgmp
package  provides  the  C  runtime   library,   while   the   associated
mingw32-libgmpxx package provides the C++ runtime library. 


Package: mingw32-libarchive                           Subsystem: mingw32
Components: dev, dll, doc, lic

library for handling various archive formats
--------------------------------------------

libarchive is a programming library that can  create  and  read  several
different streaming archive formats, including most popular tar variants
and several cpio formats, and ar archives. It can also read  shar,  zip,
jar, and xar archives, as well as ISO9660 CDROM images. It automatically
handles  gzip,  bzip2,  compress,   xz,   and   lzma   compression   and
decompression,  as well as uudecode decompression. The bsdtar program is
an implementation of tar(1) that is built on top of libarchive. 

This MinGW port  of  libarchive  differs  from  the  MSYS  version  also
provided  by  the  MinGW/MSYS project. This version does not require the
MSYS runtime library, but does not support MSYS "unix"  style  pathnames
nor  mtree  data.  It  does  not  support archives that contain symbolic
links. Both mingw32-libarchive and msys-libarchive (and their associated
bsdtar  and  bsdcpio  subpackages)  depend  on  additional  DLLs such as
mingw32-liblzma (msys-liblzma), etc. There  is,  in  addition,  a  MinGW
package  that  provides  a  standalone  version  of  bsdtar which has no
external    dependencies     and     only     limited     functionality:
mingw32-basic-bsdtar (see its documentation for more information). 

The mingw32-libarchive package provides the runtime library, development
files,  and  documentation for libarchive. The associated mingw32-bsdtar
package provides an implementation of tar(1) based on libarchive,  while
the associated mingw32-bsdcpio package provides a similar implementation
of cpio(1). 


Package: mingw32-libasprintf                          Subsystem: mingw32
Components: dll

GNU Internationalization Utility Library
----------------------------------------

GNU gettext provides a set of tools that  create  a  framework  to  help
other  GNU  packages  produce  multi-lingual messages. In this way, with
suitable care a single binary application can automatically provide user
messages  (such  as  `help'  text)  in the language corresponding to the
current locale settings. libasprintf provides an implementation of the C
formatted  output  routines  suitable for use in C++ applications, where
i18n is a goal. 

The libasprintf package provides the runtime library  for  the  asprintf
utility  library. The associated gettext package provides utilities that
may be useful  to  end-users,  allowing  interaction  with  the  message
translation  database  of  other  i18n-enabled  GNU  utilities.  It also
provides the development libraries, header files, and documentation  for
the   gettext  system,  as  well  as  additional  utilities  useful  for
maintainers of i18n-enabled applications.  The  *-ext  package  provides
extra  documentation,  in  the  form  of example implementations in many
different  computer  languages.  The  associated  libgettextpo   package
provides  the  runtime  libraries needed by the gettext utilities, while
the associated libintl package provides the  runtime  component  of  the
internationalization library itself. 


Package: mingw32-libbz2                               Subsystem: mingw32
Components: dll

runtime library for bzip2
-------------------------

bzip2 is a freely available, patent free (see below), high-quality  data
compressor.  It  typically  compresses files to within 10% to 15% of the
best available techniques (the PPM family of a statistical compressors),
whilst being around twice as fast at compression and six times faster at
decompression. This package provides the runtime library. The associated
mingw32-bzip2  package  provides  utilities, scripts, documentation, and
development files. 


Package: mingw32-libcharset                           Subsystem: mingw32
Components: dll

GNU libraries and utilities for character set conversion
--------------------------------------------------------

GNU libiconv provides an implementation of the iconv() function which is
used  to convert between various character representations for different
locales. This function is  provided  for  use  on  systems  which  don't
already  have  iconv(),  or  whose implementation cannot convert from/to
Unicode. This package also provides a tool, iconv(1), which can be  used
to  convert  character  sets  from  the  command  line.  The  associated
libcharset provides a mechanism to determine the canonical character set
name of the current locale. 


Package: mingw32-libexpat                             Subsystem: mingw32
Components: dev, dll

XML parsing library written in C
--------------------------------

expat is a C library for parsing XML written by James Clark. Expat is  a
stream-oriented  XML  parser. This means that you register handlers with
the parser before starting the parse. These handlers are called when the
parser discovers the associated structures in the document being parsed.
A start tag is an example of the kind of structures for  which  you  may
register handlers. 

The mingw32-libexpat package provides the runtime  library  and  related
development  files  for  expat.  The  associated  mingw32-expat  package
provides the xmlwf validation tool  and  documentation  related  to  the
library. 

NOTE: As of release 2.1.0-1 this DLL is now part of the primary package.



Package: mingw32-libgcc                               Subsystem: mingw32
Components: dll

The GNU C Compiler Shared Runtime Library
-----------------------------------------

This package provides the MinGW implementation  of  the  shared  runtime
library for the GNU C language compiler; you must install it if you wish
to use this compiler with -shared-libgcc support enabled, or if you wish
to use any other GCC language compiler, and you require safe handling of
exceptions which may cross DLL boundaries. 

This is a freely redistributable library; it is required  by,  (and  you
must  distribute  it  with),  any  application  compiled  by the GNU C++
language compiler,  unless  support  for  shared  runtime  libraries  is
explicitly disabled when building. 

NOTE: As of gcc-4.8.1 release this library is delivered in the -dll file
of the gcc-core package. 


Package: mingw32-libgettextpo                         Subsystem: mingw32
Components: dll

GNU Internationalization Utility Library
----------------------------------------

GNU gettext provides a set of tools that  create  a  framework  to  help
other  GNU  packages  produce  multi-lingual messages. In this way, with
suitable care a single binary application can automatically provide user
messages  (such  as  `help'  text)  in the language corresponding to the
current locale settings. libgettextpo provides runtime support  for  the
gettext  utilities; it is typically not needed by `regular' i18n clients
of libintl. 

The libgettextpo package provides the runtime libraries  needed  by  the
gettext  utilities.  The  associated  gettext package provides utilities
that may be useful to end-users, allowing interaction with  the  message
translation  database  of  other  i18n-enabled  GNU  utilities.  It also
provides the development libraries, header files, and documentation  for
the   gettext  system,  as  well  as  additional  utilities  useful  for
maintainers of i18n-enabled applications.  The  *-ext  package  provides
extra  documentation,  in  the  form  of example implementations in many
different  computer  languages.  The  associated   libasprintf   package
provides  the  runtime  library  for  the  asprintf utility library; and
finally, the associated libintl package provides the  runtime  component
of the internationalization library itself. 


Package: mingw32-libgfortran                          Subsystem: mingw32
Components: dll

The GNU FORTRAN Compiler Runtime Library
----------------------------------------

This package provides the MinGW implementation  of  the  shared  runtime
library  for  the  GNU FORTRAN language compiler; you must install it if
you wish to use this compiler. 

This is a freely redistributable library; it is required  by,  (and  you
must  distribute  it  with), any application compiled by the GNU FORTRAN
language compiler,  unless  support  for  shared  runtime  libraries  is
explicitly disabled when building. 


Package: mingw32-libgmp                               Subsystem: mingw32
Components: dll

The GNU Multiple Precision Arithmetic Library
---------------------------------------------

GNU MP is a library for arbitrary  precision  arithmetic,  operating  on
signed  integers, rational numbers, and floating point numbers. It has a
rich set of functions, and the functions have a regular interface. 

The MinGW/MSYS project provides two libgmp packages:  the  native  win32
mingw32-libgmp  and  an  MSYS  version,  msys-libgmp.  mingw32-libgmp is
provided as a necessary component of modern MinGW gcc  compilers,  while
the  msys-libgmp  version  requires  the  MSYS dll, and is provided as a
prerequisite of certain other MSYS tools, such as guile. 

The  mingw32-libgmp  package  provides  the  C  runtime   library.   The
associated  mingw32-gmp  package  provides the documentation for the gmp
library, as well  as  the  related  development  files.  The  associated
mingw32-libgmpxx package provides the C++ runtime library. 

This is a required component of the MinGW Compiler Suite. 


Package: mingw32-libgmpxx                             Subsystem: mingw32
Components: dll

The GNU Multiple Precision Arithmetic Library
---------------------------------------------

GNU MP is a library for arbitrary  precision  arithmetic,  operating  on
signed  integers, rational numbers, and floating point numbers. It has a
rich set of functions, and the functions have a regular interface. 

The mingw32-libgmpxx package  provides  the  C++  runtime  library.  The
associated  mingw32-gmp  package  provides the documentation for the gmp
library, as well  as  the  related  development  files.  The  associated
mingw32-libgmp package provides the C runtime library. 


Package: mingw32-libgnat                              Subsystem: mingw32
Components: dll

The GNU Ada Compiler Runtime Library
------------------------------------

This package provides the MinGW implementation  of  the  shared  runtime
library  for  the  GNU Ada language compiler; you must install it if you
wish to use this compiler. 

This is a freely redistributable library; it is required  by,  (and  you
must  distribute  it  with),  any  application  compiled  by the GNU Ada
language compiler,  unless  support  for  shared  runtime  libraries  is
explicitly disabled when building. 

NOTE: As of gcc-4.8.1 release this library is delivered in the -dll file
of the gcc-ada package. 


Package: mingw32-libgomp                              Subsystem: mingw32
Components: dll


Package: mingw32-libiconv                             Subsystem: mingw32
Components: bin, dev, dll, doc, html, lang, lic, man

GNU libraries and utilities for character set conversion
--------------------------------------------------------

GNU libiconv provides an implementation of the iconv() function which is
used  to convert between various character representations for different
locales. This function is  provided  for  use  on  systems  which  don't
already  have  iconv(),  or  whose implementation cannot convert from/to
Unicode. This package also provides a tool, iconv(1), which can be  used
to  convert  character  sets  from  the  command  line.  The  associated
libcharset provides a mechanism to determine the canonical character set
name of the current locale. 


Package: mingw32-libintl                              Subsystem: mingw32
Components: dll

GNU Internationalization Runtime Library
----------------------------------------

GNU gettext provides a set of tools that  create  a  framework  to  help
other  GNU  packages  produce  multi-lingual messages. In this way, with
suitable care a single binary application can automatically provide user
messages  (such  as  `help'  text)  in the language corresponding to the
current locale settings. libintl is the  primary  runtime  component  of
that framework. 

The  libintl  package  provides  the  runtime  component  of   the   GNU
internationalization  library.  The  gettext  package provides utilities
that may be useful to end-users, allowing interaction with  the  message
translation  database  of  other  i18n-enabled  GNU  utilities.  It also
provides the development libraries, header files, and documentation  for
the   gettext  system,  as  well  as  additional  utilities  useful  for
maintainers of i18n-enabled applications.  The  *-ext  package  provides
extra  documentation,  in  the  form  of example implementations in many
different  computer  languages.  The  associated  libgettextpo   package
provides  the  runtime  libraries  needed  by the gettext utilities; the
associated libasprintf package provides  the  runtime  library  for  the
asprintf utility library. 


Package: mingw32-libltdl                              Subsystem: mingw32
Components: dev, dll

A portable dlopen replacement
-----------------------------

GNU libtool is a generic  library  support  script.  Libtool  hides  the
complexity  of  using  shared  libraries  behind  a consistent, portable
interface. Libtool requires the use of Autoconf. 

libltdl provides the runtime library and development files for  using  a
pre-built   version   of   libtool's  dlopen  replacement  library.  The
associated libtool package provides the development files and  utilities
for  managing  the  creation  and  use of shared libraries in a platform
independent manner. 


Package: mingw32-liblzma                              Subsystem: mingw32
Components: dev, dll

High performance compression library based on the LZMA algorithm
----------------------------------------------------------------

LZMA is  data  compression  algorithm  based  on  the  Lempel-Ziv-Markov
chain-Algorithm.  It  provides  high  compression  ratios  and very fast
decompression, with minimal memory requirements  for  decompression.  XZ
Utils  is  the latest generation of this software, supplanting the older
LZMA Utils, which itself was a friendly fork of the original  LZMA  SDK.
The  xz  package  provides  commandline  utilities  for  compression and
decompression of XZ and LZMA data,  and  documentation.  The  associated
liblzma  package  provides the runtime library and development files for
creating applications that use LZMA or XZ compression. 

The MinGW/MSYS project provides both this native (mingw32)  version  and
an  MSYS  version  of  the  liblzma  package(s). While the latter is the
primary tool from the perspective of the MSYS  distribution,  the  MinGW
version is provided as one of the prerequisites for the native (mingw32)
basic-bsdtar utility. 


Package: mingw32-libminizip                           Subsystem: mingw32
Components: dev, dll

Simple ZIP support from zlib
----------------------------

NOTE: This program was not delivered with the zlib-1.2.8  release.  This
decision was made due to the number of downloads for the package as well
as a belief that the libarchive package is already minimal enough. It is
therefore considered obsolete and should be removed from your system. 

The minizip library provides zlib-based  support  for  manipulating  ZIP
archives. It is suitable for clients that need only create, inspect, and
unpack such archives; more demanding needs may be met by the  libarchive
package. 

This distribution also provides two simple utility programs: minizip and
miniunzip.  Again, more sophisticated needs are met by the unzip and zip
packages. 


Package: mingw32-libmpc                               Subsystem: mingw32
Components: dll

Arbitrary Precision Math Library for Complex Numbers
----------------------------------------------------

MPC  is  a  C  library  for  the  arithmetic  of  complex  numbers  with
arbitrarily  high  precision  and  correct rounding of the result. It is
built upon and  follows  the  same  principles  as  MPFR.  This  package
provides the runtime library. 

The  mingw32-libmpc  package  provides  the  C  runtime   library.   The
associated  mingw32-mpc  package  provides the documentation for the mpc
library, as well as the related development files. 

This is a required component of the MinGW Compiler Suite. 


Package: mingw32-libmpfr                              Subsystem: mingw32
Components: dll

Arbitrary Precision Floating Point Math Library
-----------------------------------------------

The MPFR library is a C library  for  multiple-precision  floating-point
computations  with correct rounding. The main goal of MPFR is to provide
a library for multiple-precision  floating-point  computation  which  is
both  efficient  and  has  a  well-defined semantics. It copies the good
ideas   from   the   ANSI/IEEE-754   standard    for    double-precision
floating-point  arithmetic  (53-bit  mantissa). MPFR is based on the GMP
multiple-precision library. 

The mingw32-libmpfr package provides the runtime library. The associated
mingw32-mpfr package provides the documentation for the mpfr library, as
well as the related development files. 

This is a required component of the MinGW Compiler Suite. 


Package: mingw32-libobjc                              Subsystem: mingw32
Components: dll

The GNU Objective-C Compiler Runtime Library
--------------------------------------------

This package provides the MinGW implementation  of  the  shared  runtime
library  for  the GNU Objective-C language compiler; you must install it
if you wish to use this compiler. 

This is a freely redistributable library; it is required  by,  (and  you
must   distribute   it  with),  any  application  compiled  by  the  GNU
Objective-C  language  compiler,  unless  support  for  shared   runtime
libraries is explicitly disabled when building. 

NOTE: As of gcc-4.8.2-1 release this library is delivered in the primary
gcc-objc-%-mingw32-dll file. 


Package: mingw32-libpdcurses                          Subsystem: mingw32
Components: dev, dll

libpdcurses: Public Domain Curses Implementation
------------------------------------------------

Public Domain Curses, aka  PDCurses,  is  an  implementation  of  X/Open
curses  for  multiple  platforms.  This package provides normal, unicode
(wide  char),  and  UTF-8  versions  of  the  library   and   associated
demonstration programs. 

The mingw32-libpdcurses package provides the runtime library and related
development  files for pdcurses. The associated mingw32-pdcurses package
provides the documentation and demonstration  programs  related  to  the
library. 


Package: mingw32-libpopt                              Subsystem: mingw32
Components: dev, dll, lang

Command line option parsing library
-----------------------------------

popt is a command line option parsing library. While popt is similiar to
getopt,  it  contains a number of enhancements. This version is based on
the rpm5.org version of popt,  rather  than  the  rpm.org  version.  The
rpm5.org implementation is more portable. 

The mingw32-libpopt package provides the runtime library and development
files.  The  associated  mingw32-popt package provides the documentation
for the popt library. 


Package: mingw32-libpthread-old                       Subsystem: mingw32
Components: dll

POSIX threading library for Win32
---------------------------------

pthreads-w32 seeks  to  provide  a  freely  available  and  high-quality
implementation  of  pthreads for Windows. Pthreads is an API for writing
multithreaded applications following the POSIX standard. 

The  mingw32-libpthread-old  package  provides  the  MinGW  pthreads-w32
runtime  dll  associated  with  MinGW  GCC  4.5.2  and  older. Due to an
unfortunate naming choice, upgrading to newer GCC will also install  the
newer,  renamed  pthreads-w32  DLLs, removing the old DLL. While the may
not affect the new GCC, threaded applications compiled using  the  older
compiler  will break, as they will miss this runtime library. Therefore,
the old runtime library is provided  here  using  a  new  package  name:
mingw32-libpthread-old,  so that it can be (re)installed parallel to the
new pthreads-w32 runtime libraries. 


Package: mingw32-libpthreadgc                         Subsystem: mingw32
Components: dll

POSIX threading library for Win32
---------------------------------

NOTE:  The  2.9.1  release  delivers  this  library  as  part   of   the
pthreads-w32-2.9.1-1-mingw32-dll.tar.lzma  file.  This  DLL  file  is  a
dependency for gcc-core-4.8.1 and will be installed as such  when  using
mingw-get. 

pthreads-w32 seeks  to  provide  a  freely  available  and  high-quality
implementation  of  pthreads for Windows. Pthreads is an API for writing
multithreaded applications following the POSIX standard. 

There are two mingw32 versions of the pthread-w32 runtime  library:  the
standard  one,  provided by this package, is called libpthreadgc but may
also be referred to as  'libpthread'.  The  non-standard  one  uses  C++
exception handling, and is called libpthreadgce. (Note that the standard
library may be used successfully with C++ code;  indeed,  on  most  *nix
platorms  the  system  pthreads  implementation  follows the behavior of
mingw32-libpthreadgc, and NOT the behavior of  the  'GCE'  version).  We
recommend  that  most  users rely on mingw32-libpthreadgc ('GC') and not
mingw32-libpthreadgce ('GCE'). 

The mingw32-libpthreadgc and mingw32-libpthreadgce packages provide  the
two  runtime libraries (most people need not install the 'GCE' one). The
associated mingw32-pthreads-w32 package provides the  documentation  for
the  pthreads-w32 library, as well as the related development files. The
mingw32-libquserex  package  provides  optional  support  for   enhanced
standards conformance of the GCE runtime. 

mingw32-libpthreadgc is a  required  component  of  the  MinGW  Compiler
Suite. 


Package: mingw32-libpthreadgce                        Subsystem: mingw32
Components: dll

POSIX threading library for Win32
---------------------------------

NOTE:  The  2.9.1  release  delivers  this  library  as  part   of   the
pthreads-w32-2.9.1-1-mingw32-dll.tar.lzma  file.  This  DLL  file  is  a
dependency for gcc-core-4.8.1 and will be installed as such  when  using
mingw-get. 

pthreads-w32 seeks  to  provide  a  freely  available  and  high-quality
implementation  of  pthreads for Windows. Pthreads is an API for writing
multithreaded applications following the POSIX standard. 

There are two mingw32 versions of the pthread-w32 runtime  library:  the
non-standard one, provided by this package, is called libpthreadgce, and
uses  C++  exception  handling.   The   standard   runtime   is   called
mingw32-libpthreadgc, and may also be referred to as mignw32-libpthread.
(Note that the standard library may be used successfully with C++  code;
indeed, on most *nix platorms the system pthreads implementation follows
the behavior of mingw32-libpthreadgc, and NOT the behavior of the  'GCE'
version).  We  recommend  that  most  users rely on mingw32-libpthreadgc
('GC') and not mingw32-libpthreadgce ('GCE'). 

The mingw32-libpthreadgc and mingw32-libpthreadgce packages provide  the
two  runtime libraries (most people need not install the 'GCE' one). The
associated mingw32-pthreads-w32 package provides the  documentation  for
the  pthreads-w32 library, as well as the related development files. The
mingw32-libquserex  package  provides  optional  support  for   enhanced
standards conformance of the GCE runtime. 


Package: mingw32-libquadmath                          Subsystem: mingw32
Components: dll


Package: mingw32-libquserex                           Subsystem: mingw32
Components: dll

POSIX threading library for Win32
---------------------------------

NOTE: The 2.9.1 release does not deliver this library. This decision was
based on the number of downloads for the library and the fact that it is
experimental. 

pthreads-w32 seeks  to  provide  a  freely  available  and  high-quality
implementation  of  pthreads for Windows. Pthreads is an API for writing
multithreaded applications following the POSIX standard.  libquserex  is
an  optional  library  to  enable  enhanced standards conformance of the
non-standard mingw32-libpthreadgce ('GCE') runtime. It  provides  access
to  a  a  kernel  mode  driver,  AlertDrv.sys, which if installed allows
ordinary users to exploit the Win32 QueueUserAPCEx function call. 

There are two mingw32 versions of the pthread-w32 runtime  library:  the
non-standard  one  provided  by  mingw32-libpthreadgce  ('GCE') uses C++
exceptions, and for full POSIX conformance needs a  kernel  mode  driver
installed.  The  standard  runtime, mingw32-libpthreadgc ('GC') does not
require that driver for full standards conformance, and may be used with
C++  code;  we  recommend  that  most users rely on mingw32-libpthreadgc
('GC') and not mingw32-libpthreadgce ('GCE'). 

However, for those that wish to experiment with the non-standard ('GCE')
runtime, this optional helper library may also be of use -- provided the
kernel mode driver, available from mingw.org, is  also  installed.  Note
that the kernel mode driver can not currently be installed on W7 (64bit)
or Windows Server 2008R2 (64bit) because those operating systems require
kernel  mode  drivers to be digitally signed, so this mingw32-libquserex
package is rather useless on those platforms. 

The kernel mode  driver  is  available  at  mingw.org  or  mirror  site,
packaged     as     an    InnoSetup    installer    executable    called
QueueUserAPCEx-installer.exe. 


Package: mingw32-libssp                               Subsystem: mingw32
Components: dll


Package: mingw32-libstdc++                            Subsystem: mingw32
Components: dll

The GNU C++ Compiler Runtime Library
------------------------------------

This package provides the MinGW implementation  of  the  shared  runtime
library  for  the  GNU C++ language compiler; you must install it if you
wish to use this compiler. 

This is a freely redistributable library; it is required  by,  (and  you
must  distribute  it  with),  any  application  compiled  by the GNU C++
language compiler,  unless  support  for  shared  runtime  libraries  is
explicitly disabled when building. 

NOTE: As of gcc-4.8.1 release this library is delivered in the -dll file
of the gcc-c++ package. 


Package: mingw32-libtool                              Subsystem: mingw32
Components: bin, doc, lic

A shared library generation tool
--------------------------------

GNU libtool is a generic library  support  package.  Libtool  hides  the
complexity  of  using  shared  libraries  behind  a consistent, portable
interface. Libtool requires the use of Autoconf. 

libtool provides the development files and utilities  for  managing  the
creation  and  use of shared libraries in a platform independent manner.
The  associated  libltdl  package  provides  the  runtime  library   and
development  files  for  using  a  pre-built version of libtool's dlopen
replacement library. 


Package: mingw32-libunistring                         Subsystem: mingw32
Components: dev, dll, doc, lic

libunistring: Library for manipulating Unicode strings
------------------------------------------------------

Text files are nowadays usually encoded in Unicode, and may  consist  of
very  different  scripts  -  from Latin letters to Chinese Hanzi -, with
many kinds of special characters - accents, right-to-left writing marks,
hyphens,  Roman  numbers, and much more. But the POSIX platform APIs for
text do not contain  adequate  functions  for  dealing  with  particular
properties  of many Unicode characters. In fact, the POSIX APIs for text
have several assumptions at their base  which  don't  hold  for  Unicode
text.  This  library provides functions for manipulating Unicode strings
and for manipulating C strings according to the Unicode standard. 


Package: mingw32-libz                                 Subsystem: mingw32
Components: dev, dll

A Massively Spiffy Yet Delicately Unobtrusive Compression Library
-----------------------------------------------------------------

The  zlib  compression  library  provides  in-memory   compression   and
decompression  functions, including integrity checks of the uncompressed
data. The libz  package  provides  the  runtime  and  development  files
related  to  the  ZLib  library.  The  associated  zlib package provides
documentation. 


Package: mingw32-lua                                  Subsystem: mingw32
Components: bin, dev, dll, doc, lic, man

Lua Embedded Scripting Language Interface
-----------------------------------------

Lua is  a  powerful,  light-weight  programming  language  designed  for
extending   applications.   Lua   is   also   frequently   used   as   a
general-purpose, stand-alone language. Lua is free software. 

For complete information, visit Lua's web  site  at  http://www.lua.org/
For an executive summary, see http://www.lua.org/about.html 

Lua has been used in many different projects around  the  world.  For  a
short list, see http://www.lua.org/uses.html 


Package: mingw32-make                                 Subsystem: mingw32
Components: bin, doc, lang, lic

GNU make utility to maintain groups of programs
-----------------------------------------------

The `make' utility automatically determines  which  pieces  of  a  large
program  need  to  be recompiled, and issues commands to recompile them.
GNU `make' was implemented  by  Richard  Stallman  and  Roland  McGrath.
Development since Version 3.76 has been handled by Paul D. Smith. 

The MinGW/MSYS project provides two  versions  of  make:  the  msys-make
version  acts  generally  more as make is intended to operate, and gives
fewer headaches during execution. However, msys-make requires  the  MSYS
dll.  This  version,  mingw32-make,  does  not require the MSYS dll, but
because of the lack of POSIX support in "pure" Win32  has  a  number  of
known shortcomings in comparison. 


Package: mingw32-mgwport                              Subsystem: mingw32
Components: bin, doc, lic

MinGW/MSYS source packaging tool
--------------------------------

This is mgwport, a revolutionary new method for building and maintaining
packages  for  MinGW and MSYS. It is based on the cygport tool, which is
near-universally used to maintain components of the cygwin distribution.



Package: mingw32-mingw-get                            Subsystem: mingw32
Components: bin, gui, lic

MinGW Package Download and Installation Tool
--------------------------------------------

mingw-get is a tool to assist users in the management of MinGW and  MSYS
software  installations. Configured via an online XML database, which is
managed by the project maintainers, it offers a choice of  command  line
and  graphical  user  interfaces,  facilitating  selective  download and
installation of packages provided by the project. 

The  XML  database  provides  maintainers  with  a  mechanism  for   the
specification  of inter-package dependencies; this permits configuration
of any package, such that the end user may elect to  install  just  that
specific package, leaving mingw-get to ensure that all dependencies will
be automatically satisfied at installation time. 


Package: mingw32-mingw-utils                          Subsystem: mingw32
Components: bin, doc, lic

Various useful tools for MinGW
------------------------------

mingw-utils provides a number  of  useful  utilities  for  MinGW.  These
include: `a2dll', a script to generate DLLs from .a archives; `dsw2mak',
a script to generate  gcc-compatibile  GNU  Makefiles  from  MSDevStudio
workspace  files;  `redir.exe',  a utility for redirecting stderr within
cmd.exe sessions; `reimp.exe', a tool that  converts  certain  MS-format
import libraries to GNU format; `res2coff', for converting .res resource
files to .o object format (possibly  obsoleted  by  modern  versions  of
windres  from  mingw32-binutils). Finally, this package also provides an
experimental version of `msys-here.exe', a shell extension that  adds  a
context-menu  option  to Windows Explorer. To install msys-here, run the
`msys-here-config' script. 

Several utilities were provided in the past by previous incarnations  of
mingw-utils.  These  included  pexports,  which  is  now provided by the
separate mingw32-pexports package; dos2unix and unix2dos, which are both
now  provided  by  the  separate  mingw32-dos2unix package; and DrMinGW.
DrMinGW is now available and maintained outside the  MinGW/MSYS  project
by its original author: http://code.google.com/p/jrfonseca/wiki/DrMingw 


Package: mingw32-mingwrt                              Subsystem: mingw32
Components: dev, dll

The MinGW Runtime Library API
-----------------------------

This package provides the header files, system object  modules,  dynamic
link  libraries,  import libraries and static libraries which constitute
the standard MinGW Runtime API. 

This is a required component of the MinGW Compiler Suite. 


Package: mingw32-minizip                              Subsystem: mingw32
Components: bin

Simple ZIP support from zlib
----------------------------

NOTE: This program was not delivered with the zlib-1.2.8  release.  This
decision was made due to the number of downloads for the package as well
as a belief that the zip and unzip packages are already minimal  enough.
It  is  therefore  considered  obsolete  and should be removed from your
systems. 

The minizip package provides two simple ZIP archive manipulation  tools,
based on the minizip library from zlib. More sophisticated needs are met
by the unzip and zip packages. 

The libminizip library provides zlib-based support for manipulating  ZIP
archives. It is suitable for clients that need only create, inspect, and
unpack such archives; more demanding needs may be met by the  libarchive
package. 


Package: mingw32-mpc                                  Subsystem: mingw32
Components: dev, doc, lic

Arbitrary Precision Math Library for Complex Numbers
----------------------------------------------------

MPC  is  a  C  library  for  the  arithmetic  of  complex  numbers  with
arbitrarily  high  precision  and  correct rounding of the result. It is
built upon and follows the same principles as MPFR. 

The mingw32-mpc package provides the documentation for the mpc  library,
as  well as the related development files. The associated mingw32-libmpc
package provides the C runtime library. 


Package: mingw32-mpfr                                 Subsystem: mingw32
Components: dev, doc, lic

Arbitrary Precision Floating Point Math Library
-----------------------------------------------

The MPFR library is a C library  for  multiple-precision  floating-point
computations  with correct rounding. The main goal of MPFR is to provide
a library for multiple-precision  floating-point  computation  which  is
both  efficient  and  has  a  well-defined semantics. It copies the good
ideas   from   the   ANSI/IEEE-754   standard    for    double-precision
floating-point  arithmetic  (53-bit  mantissa). MPFR is based on the GMP
multiple-precision library. 

The  mingw32-mpfr  package  provides  the  documentation  for  the  mpfr
library,  as  well  as  the  related  development  files. The associated
mingw32-libmpfr package provides the runtime library. 


Package: mingw32-pdcurses                             Subsystem: mingw32
Components: bin, doc, lic

PDCurses: Public Domain Curses Implementation
---------------------------------------------

Public Domain Curses, aka  PDCurses,  is  an  implementation  of  X/Open
curses  for  multiple  platforms.  This package provides normal, unicode
(wide  char),  and  UTF-8  versions  of  the  library   and   associated
demonstration programs. 

The   mingw32-pdcurses   package   provides   the   documentation    and
demonstration   programs   for  the  PDCurses  library.  The  associated
mingw32-libpdcurses package provides the  runtime  library  and  related
development files. 


Package: mingw32-pexports                             Subsystem: mingw32
Components: bin, doc, lic

Generate .def files for DLLs
----------------------------

pexports can extract information from DLLs to create corresponding  .def
files  that  list the symbols available in each DLL. .def files can then
be used by dlltool  (mingw32-binutils)  to  generate  import  libraries.
pexports  is  similar  to  gendef,  but the two tools differ in how each
determines the "decoration" (or calling convention) appropriate for each
symbol, since that information is not always available directly from the
DLL's symbol table. pexports can use a C pre-processor  to  extract  the
information,  provided  you  have  the  appropriate header files. gendef
locates the symbol's code  in  the  DLL,  and  uses  a  disassembler  to
determine  that  information. Neither method is foolproof, so both tools
are provided. 

Note that in order for pexports to detect the  calling  convention,  you
must  specify  on  the command line the headers to parse. If the symbols
are not declared in those headers, then the proper decorations cannot be
computed.  Originally  written by Anders Norlander, it now supports both
32bit and 64bit DLLs and EXEs thanks to Tor Lillqvist. 


Package: mingw32-pkginfo                              Subsystem: mingw32
Components: bin

MinGW Package Identification Tool
---------------------------------

pkginfo is a tool which may be used to parse and analyse  the  names  of
packages  provided  by  the MinGW/MSYS Project. It uses the same lexical
analyser as mingw-get, to extract meta-data from any  specified  package
name. 

It is primarily of interest to members of the MinGW/MSYS  Project  Team,
who  may  use  it  to confirm that their chosen package names convey the
intended meta-data to mingw-get. 


Package: mingw32-popt                                 Subsystem: mingw32
Components: doc, lic

Command line option parsing library
-----------------------------------

popt is a command line option parsing library. While popt is similiar to
getopt,  it  contains a number of enhancements. This version is based on
the rpm5.org version of popt,  rather  than  the  rpm.org  version.  The
rpm5.org implementation is more portable. 

The  mingw32-popt  package  provides  the  documentation  for  the  popt
library.  The  associated  mingw32-libpopt  package provides the runtime
library and development files. 


Package: mingw32-pthreads-w32                         Subsystem: mingw32
Components: dev, doc, lic

POSIX threading library for Win32
---------------------------------

pthreads-w32 seeks  to  provide  a  freely  available  and  high-quality
implementation  of  pthreads for Windows. Pthreads is an API for writing
multithreaded applications following the POSIX standard. 

The mingw32-pthreads-w32 package  provides  the  documentation  for  the
pthreads-w32  library,  as  well  as  the related development files. The
associated mingw32-libpthread package provides the runtime library. 


Package: mingw32-tcl                                  Subsystem: mingw32
Components: bin, dev, dll, doc, lic, man

TCL - Tool Command Language
---------------------------

Tcl (Tool Command Language) is a very powerful but easy to learn dynamic
programming  language, suitable for a very wide range of uses, including
web and desktop applications, networking,  administration,  testing  and
many  more.  Open  source  and  business-  friendly, Tcl is a mature yet
evolving language that is truly  cross  platform,  easily  deployed  and
highly extensible. 


Package: mingw32-tk                                   Subsystem: mingw32
Components: bin, dev, dll, doc, lic

TK - TCL Graphical User Interface Toolkit
-----------------------------------------

Tk is a graphical user interface toolkit that takes  developing  desktop
applications  to  a higher level than conventional approaches. Tk is the
standard GUI not only for Tcl, but for many other dynamic languages, and
can produce rich, native applications that run unchanged across Windows,
Mac OS X, Linux and more. 


Package: mingw32-w32api                               Subsystem: mingw32
Components: dev

The MinGW API for 32-Bit MS-Windows
-----------------------------------

This  package  provides  the  header   files,   and   import   libraries
constituting  a  standard  API for the development of applications which
utilise the capabilities of the 32-bit MS-Windows  system  dynamic  link
libraries. 

This is a required component of the MinGW Compiler Suite. 


Package: mingw32-wsl_rc                               Subsystem: mingw32
Components: meta

Windows System Libraries Meta-Package
-------------------------------------

This meta-package provides a delivery mechanism to  support  pre-release
testing of the upcoming windows system library packages. You are advised
to install this  package,  ONLY  if  you  wish  to  participate  in  the
pre-release  testing  of  the windows system libraries release candidate
packages. 

A two stage installation procedure is required; first, to initialise the
pre-release testing infrastructure: 

$ mingw-get install mingw32-wsl_rc 

Second, to install the release candidate software packages,  and  switch
to the testing environment: 

$ mingw-get install mingw32-wsl_rc-test-on 

Having thus activated  the  testing  environment,  you  are  advised  to
immediately, (and without prejudice to its operation): 

$ mingw-get remove mingw32-wsl_rc-test-on 

While   in   the   testing   environment,   and   after   removing   the
mingw32-wsl_rc-test-on  package,  you may revert all associated software
packages  to  their  production  releases,  thus  switching  back  to  a
production environment, by: 

$ mingw-get install mingw32-wsl_rc-test-off 

As before, after installing this, you are advised to  immediately,  (and
again without prejudice to the working environment): 

$ mingw-get remove mingw32-wsl_rc-test-off 

Finally, if having installed mingw32-wsl_rc, you subsequently decide  to
remove  it,  please  ensure  that  you  have  removed  either or both of
mingw32-wsl_rc-test-on and mingw32-wsl_rc-test-off, BEFORE you do so. 


Package: mingw32-xerces-c                             Subsystem: mingw32
Components: bin, dev, dll, lic

Xerces-C++ Validating XML Parser Library
----------------------------------------

Xerces-C++ is a validating XML parser written in a portable  subsets  of
C++.  Xerces-C++  makes  it easy to give your application the ability to
read and write XML data. A  shared  library  is  provided  for  parsing,
generating,  manipulating,  and  validating XML documents using the DOM,
SAX, and SAX2 APIs. 

Xerces-C++ is faithful to the XML 1.0 recommendation and many associated
standards. 

The parser  provides  high  performance,  modularity,  and  scalability.
Source code, samples and API documentation are provided with the parser.
For portability, care has been taken to make minimal use  of  templates,
no RTTI, and minimal use of #ifdefs. 


Package: mingw32-xz                                   Subsystem: mingw32
Components: bin, doc, lang, lic

High performance compression based on the LZMA algorithm
--------------------------------------------------------

LZMA is  data  compression  algorithm  based  on  the  Lempel-Ziv-Markov
chain-Algorithm.  It  provides  high  compression  ratios  and very fast
decompression, with minimal memory requirements  for  decompression.  XZ
Utils  is  the latest generation of this software, supplanting the older
LZMA Utils, which itself was a friendly fork of the original  LZMA  SDK.
The  xz  package  provides  commandline  utilities  for  compression and
decompression of XZ and LZMA data,  and  documentation.  The  associated
liblzma  package  provides the runtime library and development files for
creating applications that use LZMA or XZ compression. 

The MinGW/MSYS project provides both this native (mingw32)  version  and
an  MSYS  version  of the xz package(s). While the latter is the primary
tool from the perspective of the MSYS distribution, the MinGW version is
provided   as   one  of  the  prerequisites  for  the  native  (mingw32)
basic-bsdtar utility. 


Package: mingw32-zlib                                 Subsystem: mingw32
Components: doc, lic, man

A Massively Spiffy Yet Delicately Unobtrusive Compression Library
-----------------------------------------------------------------

The  zlib  compression  library  provides  in-memory   compression   and
decompression  functions, including integrity checks of the uncompressed
data. 


Package: msys-autoconf                                   Subsystem: msys
Components: bin, doc, lic

Automatic Configure Script Builder
----------------------------------

This is not the autoconf you are looking for. 

Autoconf is an extensible  package  of  M4  macros  that  produce  shell
scripts  to automatically configure software source code packages. These
scripts can adapt the  packages  to  many  kinds  of  UNIX-like  systems
without  manual  user  intervention.  Autoconf  creates  a configuration
script for a package from a  template  file  that  lists  the  operating
system features that the package can use, in the form of M4 macro calls.


This msys port of autoconf has been modified specifically for  the  MSYS
System  Builder  (msys-dvlpr) environment; that is, it is intended to be
used only when producing binary packages for the MSYS subsystem. If  you
intend  to  produce executables for the native "mingw32" subsystem (that
is, applications that should work  on  Microsoft  Windows  installations
without  the  MSYS dll), then you should install the mingw32-autoconf-*,
mingw32-autoconf2.5-*, and/or mingw32-autoconf2.1-* packages instead. 


Package: msys-autogen                                    Subsystem: msys
Components: bin, doc, lic

Simplifies the creation and maintenance of programs
---------------------------------------------------

AutoGen is a tool designed to simplify the creation and  maintenance  of
programs   that  contain  large  amounts  of  repetitious  text.  It  is
especially valuable in programs that have several blocks  of  text  that
must  be kept synchronized. libopts provides the runtime component of an
autogen add-on that simplifies the maintainance of that portion of  your
code that parses command-line options. 

A common  example  where  this  would  be  useful  is  in  creating  and
maintaining the code required for processing program options. Processing
options requires multiple constructs to be  maintained  in  parallel  in
different  places  in your program. Options maintenance needs to be done
countless times. So, AutoGen comes with an add-on package named AutoOpts
that simplifies the maintenance and documentation of program options. 

The  msys-autogen   package   provides   the   autogen   utilities   and
documentation.  The associated msys-libopts package provides the runtime
library and development files for AutoOpts, a  semi-  automated  command
line option parser library and toolset based on AutoGen. 


Package: msys-automake                                   Subsystem: msys
Components: bin, doc, lic

Automatic Makefile Builder
--------------------------

This is not the automake you are looking for. 

Automake is  a  tool  for  automatically  generating  Makefile.in  files
compliant  with  the  GNU Coding Standards. Automake requires the use of
Autoconf. 

This msys port of automake has been modified specifically for  the  MSYS
System  Builder  (msys-dvlpr) environment; that is, it is intended to be
used only when producing binary packages for the MSYS subsystem. If  you
intend  to  produce executables for the native "mingw32" subsystem (that
is, applications that should work  on  Microsoft  Windows  installations
without  the  MSYS dll), then you should install the mingw32-automake-*,
and/or the mingw32-automake1.NN-* packages instead. 


Package: msys-base                                       Subsystem: msys
Components: bin

A Basic MSYS Installation (meta)
--------------------------------

This meta package contains the components necessary to create  a  basic,
small,  but  relatively  useful  MSYS installation. It includes the core
system, bash, various command line utilities, and  archiving/compression
tools.  It  attempts  to replicate, with certain judicious additions and
deletions, the set  of  tools  originally  installed  by  the  old  MSYS
monolithic installers. 


Package: msys-bash                                       Subsystem: msys
Components: bin, doc, lic, lnk

The GNU Bourne Again shell
--------------------------

Bash  is  a  GNU  project  sh-compatible  shell  or   command   language
interpreter. Bash (Bourne Again shell) incorporates useful features from
the Korn shell (ksh) and the C shell (csh). Bash is intended to  conform
to the IEEE POSIX P1003.2/ISO 9945.2 Shell and Tools standard. It offers
functional improvements over sh for  both  programming  and  interactive
use.  Most  sh  scripts can be run by bash without modification. Bash is
the default shell for MSYS. 


Package: msys-binutils                                   Subsystem: msys
Components: bin, doc, lic

The GNU Binary File Utilities (msys)
------------------------------------

This is not the binutils you are looking for. 

This package provides the GNU assembler, linker, archive librarian,  and
other   utilities   for   manipulating  object  format  files,  compiled
specifically for use generating  MSYS  libraries  and  applications.  It
should be installed into the / == /usr (that is, C:\msys\1.0) directory,
and NOT into the usual MinGW location /mingw (C:\MinGW). It is  part  of
the MSYS System Builder (msys-dvlpr) toolset. 

Install this component only  if  you  intend  to  create  MSYS-dependent
applications. 


Package: msys-bison                                      Subsystem: msys
Components: bin, doc, lang, lic, rtm

GNU Parser Generator
--------------------

bison is a general-purpose parser generator that converts  an  annotated
context-free  grammar  into  an  LALR(1) or GLR parser for that grammer.
Bison is upward  compatible  with  Yacc  --  all  properly-written  Yacc
grammars ought to work with Bison with no change. 

The  msys-bison-bin  (sub)package  provides  the  bison  executable  and
associated  development files. The msys-bison-lang (sub)package provides
i18n  support  for  the  bison  executable,  while  the   msys-bison-rtm
(sub)package provides i18n support for applications created with bison. 


Package: msys-bsdcpio                                    Subsystem: msys
Components: bin

BSD version of the cpio utility
-------------------------------

The msys-bsdcpio package provides an implementation of cpio(1) based  on
libarchive,  which  copies  files between archives and directories. This
implementation can extract from tar, pax, cpio,  zip,  jar,  ar,  mtree,
xar,  and  ISO  9660 cdrom images, as well as create tar, pax, cpio, ar,
and shar archives. It supports automatic detection and handling of  .gz,
.bz2,  .lzma,  .xz,  and .Z decompression (and compression). It supports
the old POSIX.1 portable cpio format (odc), the new SVR4  portable  cpio
format (newc), as well as the POSIX.1 pax and ustar formats. 

This MSYS port of bsdcpio differs from the MinGW version  also  provided
by  the  MinGW/MSYS  project.  In addition to requiring the MSYS runtime
library, this implementation supports mtree data and understands  MSYS's
"unix"  style pathnames. It also supports archives that contain symbolic
links by converting them to  equivalent  hardlink  (or  recursive  copy)
representations  (see  below). The MinGW implementation does not support
archives with symbolic links. It  does,  however,  operate  properly  on
systems   where   MSYS   is   not   installed.   Both  msys-bsdcpio  and
mingw32-bsdcpio  depend  on  additional  DLLs  such  as  msys-libarchive
(mingw32-liblzma), etc. 

This msys implementation has  some  unique  behaviors  with  regards  to
symbolic  and  hard  links.  When creating archives on an MSYS platform,
there are no symbolic links; hardlinks are archived as on unix,  without
requiring  duplicate  storage  (unless  the --hard-dereference option is
used). When extracing archives on  an  MSYS  platform,  if  the  archive
contains  hardlinks  then  they  are reproduced on the local file system
provided the Win32 filesystem supports hardlinks (e.g. NTFS. On  FAT,  a
duplicate copy of the file is created). If the archive contains symbolic
links where the target is a file contained within  the  archive  itself,
then  those links are reproduced as if they were hardlinks, as described
above. "Dangling" symbolic links are not supported.  Symbolic  links  to
directories  within the archive are "supported", by creating a recursive
copy of the target directory, where the contents of  the  directory  are
treated as hardlinks as described above. 

This msys implementation ignores ownership data and permission bits; all
extracted  files are created as if owned by the current user, regardless
of the current user's root (Administrator) status.  All  archived  files
are  added  to  the archive with "default" permission and as if owned by
the current user. 

libarchive is a programming library that can  create  and  read  several
different streaming archive formats, including most popular tar variants
and several cpio formats, mtree, and ar archives. It can also read shar,
zip,  jar,  and  xar  archives,  as  well  as  ISO9660  CDROM images. It
automatically handles gzip, bzip2, compress, xz,  and  lzma  compression
and  decompression,  as  well  as  uudecode  decompression.  The bsdcpio
program is an  implementation  of  cpio(1)  that  is  built  on  top  of
libarchive. 

The msys-bsdcpio package provides an implementation of cpio(1) based  on
libarchive,  while the associated msys-bsdtar package provides a similar
implementation  of  tar(1).  The  associated   msys-libarchive   package
provides the runtime library, development files, and documentation. 


Package: msys-bsdtar                                     Subsystem: msys
Components: bin

BSD version of the tar utility
------------------------------

The msys-bsdtar package provides an implementation of  tar(1)  based  on
libarchive,  which  manipulates streaming archive files -- including the
eponymous tar format. However, bsdtar can also extract  from  tar,  pax,
cpio,  zip,  jar,  ar, xar, mtree, and ISO 9660 cdrom images, as well as
create tar, pax,  cpio,  ar,  mtree,  and  shar  archives.  It  supports
automatic  detection  and  handling  of  .gz,  .bz2,  .lzma, .xz, and .Z
decompression (and compression). It supports ustar,  pax,  and  GNU  tar
formats. 

This MSYS port of bsdtar differs from the MinGW version also provided by
the  MinGW/MSYS  project.  In  addition  to  requiring  the MSYS runtime
library, this implementation supports mtree data and understands  MSYS's
"unix"  style pathnames. It also supports archives that contain symbolic
links by converting them to  equivalent  hardlink  (or  recursive  copy)
representations  (see  below). The MinGW implementation does not support
archives with symbolic links, nor mtree data. It does, however,  operate
properly  on  systems  where MSYS is not installed. Both msys-bsdtar and
mingw32-bsdtar  depend  on  additional  DLLs  such  as   msys-libarchive
(mingw32-liblzma),  etc.  There  is,  in  addition, a MinGW package that
provides  a  standalone  version  of  bsdtar  which  has   no   external
dependencies  and  only limited functionality: mingw32-basic-bsdtar (see
its documentation for more information). 

This msys implementation has  some  unique  behaviors  with  regards  to
symbolic  and  hard  links.  When creating archives on an MSYS platform,
there are no symbolic links; hardlinks are archived as on unix,  without
requiring  duplicate  storage  (unless  the --hard-dereference option is
used). When extracing archives on  an  MSYS  platform,  if  the  archive
contains  hardlinks  then  they  are reproduced on the local file system
provided the Win32 filesystem supports hardlinks (e.g. NTFS; on  FAT,  a
duplicate copy of the file is created). If the archive contains symbolic
links where the target is a file contained within  the  archive  itself,
then  those links are reproduced as if they were hardlinks, as described
above. "Dangling" symbolic links are not supported.  Symbolic  links  to
directories  within the archive are "supported", by creating a recursive
copy of the target directory, where the contents of  the  directory  are
treated as hardlinks as described above. 

This msys implementation ignores ownership data and permission bits; all
extracted  files are created as if owned by the current user, regardless
of the current user's root (Administrator) status.  All  archived  files
are  added  to  the archive with "default" permission and as if owned by
the current user. 

libarchive is a programming library that can  create  and  read  several
different streaming archive formats, including most popular tar variants
and several cpio formats, mtree, and ar archives. It can also read shar,
zip,  jar,  and  xar  archives,  as  well  as  ISO9660  CDROM images. It
automatically handles gzip, bzip2, compress, xz,  and  lzma  compression
and decompression, as well as uudecode decompression. The bsdtar program
is an implementation of tar(1) that is built on top of libarchive. 

The msys-bsdtar package provides an implementation of  tar(1)  based  on
libarchive, while the associated msys-bsdcpio package provides a similar
implementation  of  cpio(1).  The  associated  msys-libarchive   package
provides the runtime library, development files, and documentation. 


Package: msys-bzip2                                      Subsystem: msys
Components: bin, doc, lic

a high-quality data compressor
------------------------------

bzip2 is a freely available, patent free (see below), high-quality  data
compressor.  It  typically  compresses files to within 10% to 15% of the
best available techniques (the PPM family of  statistical  compressors),
whilst being around twice as fast at compression and six times faster at
decompression. This package provides the utility programs and scripts. 


Package: msys-console                                    Subsystem: msys
Components: bin, doc, lic

A script to d/l, install, and configure `Console 2.00'
------------------------------------------------------

Console 2.00 is a replacement console for  win32.  The  console  is  the
window  in which cmd.exe (and, usually, MSYS bash.exe) are executed. The
normal Windows console has some drawbacks which Console 2.00 attempts to
remedy:   better  font  selection,  larger  scrollback  buffers,  tabbed
windows, resizable, easier cut-n-paste behavior, etc. 

Unfortunately, Console 2.00 can  not  be  compiled  using  free  (as  in
speech)  tools; although Console 2.00 itself is GPL, it requires certain
proprietary compilers to build.  Since  all  tools  distributed  by  the
MinGW/MSYS  project  are compiled using free tools also provided by that
project, MinGW/MSYS doesn't supply a  binary  version  of  Console  2.00
directly.  Instead,  this package contains a script that can be executed
to download the Console  2.00  binary  package  from  the  Console  2.00
developer's  site,  install  it, and configure it as appropriate for use
with MinGW and MSYS. 


Package: msys-core                                       Subsystem: msys
Components: bin, dbg, dev, doc, ext, lic

The core components of MSYS
---------------------------

MSYS, or the Minimal SYStem, is a POSIX implementation used in the Win32
operating  system  to  enable configuration and compiling of open-source
packages. This package provides the main components of  MSYS,  including
the MSYS runtime DLL itself. 

MSYS is a fork of Cygwin and is more friendly  to  the  Win32  user.  It
primarily  offers  a  user  land  environment  for MinGW development. It
converts POSIX paths before executing a  "native"  win32  program.  This
allows  the users of the MinGW version of GCC to port and build packages
in a GNU familiar way and removes  the  UNIX  complexities  that  Cygwin
adds. 

The MinGW/MSYS team provides additional packages which contain utilities
useful  for  this  purpose,  including  perl,  make, autoconf, automake,
libtool, m4,  and  many  others.  However,  the  number  of  such  `MSYS
packages'  is  limited  in  comparison  to  *nix or Cygwin, because MSYS
provides  only  the  Minimal  SYStem  needed  for  hosting  open  source
development with the MinGW GCC compiler. MSYS is not intended to replace
Cygwin, or emulate a full-fledged "port" of all *nix tools. 


Package: msys-coreutils                                  Subsystem: msys
Components: bin, doc, ext, lang, lic

GNU collection of common command line utilities
-----------------------------------------------

GNU coreutils provides a collection of commonly used utilities essential
to  a  standard  POSIX  environment.  It comprises the former textutils,
sh-utils, and fileutils packages. 

The msys-coreutils-bin subpackage contains those applications that  were
historically  part  of  the  standard  MSYS installation. The associated
msys-coreutils-ext  subpackage  contains  the  rest  of  the   coreutils
applications  that have been (nominally) ported to MSYS -- usually these
are less often used, and are not  guaranteed  to  work:  e.g.  `su.exe',
`chroot.exe' and `mkfifo.exe' are known to be broken. 


Package: msys-crypt                                      Subsystem: msys
Components: bin, doc, lic

tools for DES encryption
------------------------

crypt provides a library implementing the standard encryption  functions
crypt(),  encrypt(),  and setkey(). Many programs, such as perl, rely on
the presence of these functions; as the functions are  not  provided  by
the MSYS runtime, this additional library fulfils those needs. 

crypt also provides a command-line tool for exercising those  functions.
`crypt  cleartext' generates an encrypted version of the cleartext using
a random salt. `crypt  salt  cleartext'  encrypts  cleartext  using  the
specified salt. Salt is a two-character string which also appears as the
first two characters of the encrypted cleartext. 

The msys-crypt package  provides  the  command-line  utility  crypt  and
related documentation. The associated msys-libcrypt package provides the
runtime library and related development files. 


Package: msys-cvs                                        Subsystem: msys
Components: bin, doc, lang, lic

Concurrent Version System
-------------------------

CVS is a version control system, which allows you to keep  old  versions
of  files  (usually  source code), and maintains a log of who, when, and
why changes occurred, etc., like RCS or SCCS. 


Package: msys-cygutils                                   Subsystem: msys
Components: bin, doc, lic

A collection of simple utilities
--------------------------------

The cygutils package contains a  collection  of  simple  utilities  from
various  sources.  It provides mkshortcut and readshortcut, for creating
and reading windows-style shortcuts. It provides  getclip  and  putclip,
for  copying  between  stdin/stdout  and  the Windows clipboard. It also
provides lpr-basic. 

A note about lpr-basic: lpr-basic spools a file to the specified printer
device.  MSYS  provides  two separate implementations: lpr-basic.exe and
lpr-enhanced (the latter is a script, not a binary  executable,  and  is
available  in  the msys-lpr-enhanced package). lpr-basic.exe is suitable
for most simple printing needs; it can send "raw" data to any  installed
Windows  printer.  This  is  most useful for raw text, for sending plain
PostScript files to PostScript-compatible printers, and  for  re-sending
.prn  files  generated  using Windows' own print-to-file capabilities to
the specific printer for which the .prn file  was  generated.  For  more
information,  see `man lpr-basic'. On the other hand, lpr-enhanced is an
MSYS extension which supports many of the  advanced  capabilities  of  a
true  Unix-style  lpr  implementation.  However, it is more difficult to
configure. See the documentation embedded within the lpr-enhanced script
for more information. 

The msys-cygutils package provides many of the utilities included in the
cygutils  distribution.  Note  that  the  'dos2unix'  utilities  are NOT
provided by this package; the separate  msys-dos2unix  package  provides
versions of those utilities derived from alternate sources. 


Package: msys-dash                                       Subsystem: msys
Components: bin, doc, lic

The Debian Almquist Shell
-------------------------

DASH is a POSIX-compliant implementation of /bin/sh that aims to  be  as
small  as  possible.  It  does  this  without  sacrificing  speed  where
possible. In fact,  it  is  significantly  faster  than  bash  (the  GNU
Bourne-Again SHell) for most tasks. 

This version of dash has been modified to support $LINENO, so it  should
suffice   to  run  most  configure  scripts.  More  importantly,  unlike
msys-bash, msys-dash has no dependencies other  than  the  MSYS  runtime
itself.  Therefore,  dash  can be used (it is, in fact, required) to run
the rebaseall tool from the msys-rebase package. 


Package: msys-diffstat                                   Subsystem: msys
Components: bin, doc, lic

patch file histograms
---------------------

diffstat reads the output of  diff  and  displays  a  histogram  of  the
insertions,  deletions,  and  modifications  per-file.  It is useful for
reviewing large, complex patch files. 


Package: msys-diffutils                                  Subsystem: msys
Components: bin, doc, lang, lic

GNU collection of diff utilities
--------------------------------

Diffutils provides a group of utilities that displays difference between
and among text files. 'diff' outputs the difference between two files in
any of several formats. If the files are identical, it normally produces
no  ouput;  if  they are binary (non-text) it normally reports only that
they are different. 'cmp' shows the offsets and files numbers where  two
files  differ;  it  can also show, side by side, all the characters that
differ between the two files. 'sdiff' merges  two  files  interactively.
'diff3'  shows  differences  among  three files. If two people have made
independent changes to a common original, diff3 reports that  difference
between  the  original  and  the two changed versions, and can produce a
merged file that contains both  persons'  changes  along  with  warnings
about conflicts. 


Package: msys-dos2unix                                   Subsystem: msys
Components: bin, doc, lic

Convert line breaks between Unix, Dos, and Mac
----------------------------------------------

The dos2unix package provides manipulation utilities for converting  the
line  break characters of text files between the unix convention (0x0a),
the DOS/Windows convention (0x0d  0x0a),  and  the  old  (pre-OS-X)  Mac
convention (0x0d). 


Package: msys-expat                                      Subsystem: msys
Components: bin, doc, lic

XML parsing library written in C
--------------------------------

expat is a C library for parsing XML written by James Clark. Expat is  a
stream-oriented  XML  parser. This means that you register handlers with
the parser before starting the parse. These handlers are called when the
parser discovers the associated structures in the document being parsed.
A start tag is an example of the kind of structures for  which  you  may
register handlers. 

The  msys-expat  package  provides  the  xmlwf   validation   tool   and
documentation  related  to  the  library.  The  associated msys-libexpat
package provides the runtime library and related development files. 


Package: msys-file                                       Subsystem: msys
Components: bin, doc, lic

determine file type
-------------------

The file command is used to identify a particular file according to  the
type  of  data  contained  by the file. File can identify many different
file types, including ELF binaries, system libraries, RPM packages,  and
different graphics formats. 

The msys-file package provides the file  command  and  the  pre-compiled
magic  database,  which  describes  how  different  file types should be
identified. The associated msys-libmagic package provides  the  libmagic
runtime library and development files. 


Package: msys-findutils                                  Subsystem: msys
Components: bin, doc, lang, lic

GNU find utilities
------------------

The GNU Find Utilities are the basic directory  searching  utilities  of
the   GNU  operating  system.  These  programs  are  typically  used  in
conjunction  with  other  programs  to  provide  modular  and   powerful
directory search and file locating capabilities to other commands. 

The msys-findutils package provides 'find' --  search  for  files  in  a
directory hierarchy, and 'xargs' -- build and execute command lines from
standard input. The associated msys-locate package provides 'locate'  --
list files in databases that match a pattern, and 'updatedb' -- update a
file name database. 


Package: msys-flex                                       Subsystem: msys
Components: bin, doc, lang, lic

Fast Lexical Analyzer Generator
-------------------------------

flex is a tool for generating scanners. A scanner,  sometimes  called  a
tokenizer, is a program which recognizes lexical patterns in text. 


Package: msys-gawk                                       Subsystem: msys
Components: bin, doc, lang, lic

pattern scanning and processing language
----------------------------------------

Gawk is the GNU implementation of the  AWK  programming  language.  Many
computer  users  need to manipulate text files: extract and then operate
on data from parts of certain lines  while  discarding  the  rest,  make
changes  in  various text files wherever certain patterns appear, and so
on. To write a program to do these things in a language  such  as  C  or
Pascal  is  a  time-consuming  inconvenience that may take many lines of
code. The job is easy with  gawk,  which  interprets  a  special-purpose
programming   language   that   makes   it   possible   to  handle  many
data-reformatting jobs with just a few lines of code. 


Package: msys-gcc                                        Subsystem: msys
Components: bin, doc, lic

The GNU C Compiler For MSYS
---------------------------

This is not the gcc you are looking for. 

This package provides the MSYS implementation  of  the  GNU  C  and  C++
language  compilers;  this  includes  the C preprocessor, and the common
back end processors which are necessary to these two language compilers.
It   has   been  compiled  specifically  for  generating  MSYS-dependent
applications and libraries. It should be installed into the  /  ==  /usr
(that  is, C:\msys\1.0) directory, and NOT into the usual MinGW location
/mingw (C:\MinGW). It is part of the MSYS  System  Builder  (msys-dvlpr)
toolset. 

Install this component only  if  you  intend  to  create  MSYS-dependent
applications. 


Package: msys-gdbm                                       Subsystem: msys
Components: bin, doc, lic

GNU Database System
-------------------

The GNU  Database  System  is  a  set  of  database  routines  that  use
extensible  hashing.  It  works  similarly  to  the  standard  UNIX  dbm
routines, and provides  compatibility  replacement  interfaces  for  the
traditional 'dbm' and 'ndbm' libraries. 

The msys-gdbm package provides the command-line utilities for saving and
restoring   GDBM   databases,   other  tools  for  testing  the  various
compatibility interfaces,  and  related  documentation.  The  associated
msys-libgdbm   package   provides   the   runtime  library  and  related
development files. 


Package: msys-gettext                                    Subsystem: msys
Components: bin, dev, doc, ext, lic

GNU Internationalization Library and Utilities
----------------------------------------------

This is not the gettext you are looking for. 

GNU gettext provides a set of tools that  create  a  framework  to  help
other  GNU  packages  produce  multi-lingual messages. In this way, with
suitable care a single binary application can automatically provide user
messages  (such  as  `help'  text)  in the language corresponding to the
current locale settings. 

This msys port of gettext has been modified specifically  for  the  MSYS
System Builder environment; that is, it is intended to be used only when
producing binary packages for the  MSYS  subsystem.  If  you  intend  to
produce  executables  for  the  native  "mingw32"  subsystem  (that  is,
applications that should work on Microsoft Windows installations without
the  MSYS dll), then you should install the mingw32-gettext-* package(s)
instead. 

The msys-gettext package  provides  utilities  that  may  be  useful  to
end-users, allowing interaction with the message translation database of
other i18n-enabled GNU  utilities.  It  also  provides  the  development
libraries,  header  files,  and documentation for the gettext system, as
well as additional utilities  useful  for  maintainers  of  i18n-enabled
applications.  The  *-ext  package  provides extra documentation, in the
form of example implementations in many  different  computer  languages.
The  associated msys-libgettextpo package provides the runtime libraries
needed by the msys-gettext utilities;  the  associated  msys-libasprintf
package  provides  the runtime library for the asprintf utility library;
and finally, the associated msys-libintl package  provides  the  runtime
component  of  the internationalization library itself, which is used by
many other msys packages. 


Package: msys-gmp                                        Subsystem: msys
Components: doc, lic

The GNU Multiple Precision Arithmetic Library
---------------------------------------------

GNU MP is a library for arbitrary  precision  arithmetic,  operating  on
signed  integers, rational numbers, and floating point numbers. It has a
rich set of functions, and the functions have a regular interface. 

The MinGW/MSYS project provides two gmp packages: this msys-gmp one  and
a  native  win32  mingw32-gmp.  This  one  requires the MSYS dll, and is
provided as a necessary component of various MSYS tools, such as  guile.
The  mingw32-gmp  version is provided as a necessary component of modern
MinGW gcc compilers. 

The msys-gmp package provides the documentation for the gmp library. The
associated  msys-libgmp package provides the runtime library and related
development files. 


Package: msys-grep                                       Subsystem: msys
Components: bin, doc, lang, lic

print lines matching a pattern
------------------------------

grep searches the input files for lines containing a match  to  a  given
pattern  list.  When  it  finds a match in a line, it copies the line to
standard output (by default), or produces whatever other sort of  output
you have requested with options. 


Package: msys-groff                                      Subsystem: msys
Components: bin, doc, ext, lic, smp

GNU troff typesetting package
-----------------------------

The groff (GNU troff) software is  a  typesetting  package  which  reads
plain text mixed with formatting commands and produces formatted output.
The package is essential for viewing online manual pages. Output can  be
produced  in  a  number of formats including plain ASCII and PostScript.
All the standard macro packages are supported. 

The msys-groff package does not support the HTML nor pdf output devices,
becuase   MSYS   currently  provides  neither  the  required  postscript
interpreter nor the pbmtools. The gxditview viewer is not included.  The
msys-groff-bin subpackage provides all of the components necessary for a
working 'man' installation, while the msys-groff-ext subpackage provides
the  remaining  files needed for supported output devices other than the
console, such as postscript and hpgl, as well as additional utilties. 


Package: msys-guile                                      Subsystem: msys
Components: bin, doc, lic

A Scheme interpreter
--------------------

Guile is an  interpreter  for  the  Scheme  programming  language,  with
support for many SRFIs (Scheme Request For Implementations), packaged as
a library which can be incorporated into your programs. Your users  have
full  access  to the interpreter, so Guile itself can be extended, based
on the needs of the user. The result is a scripting language tailored to
your application. 

Guile  is  a  library  designed  to  help  programmers  create  flexible
applications.  Using Guile in an application allows programmers to write
plug-ins,  or  modules  (there  are  many  names,  but  the  concept  is
essentially  the  same) and users to use them to have an application fit
their needs. 

The msys-guile package provides a standalone guile interpreter  and  all
associated  documentation. The associated msys-libguile package provides
the runtime libraries, development files, and other runtime support. 


Package: msys-gzip                                       Subsystem: msys
Components: bin, doc, lic

compress or expand files
------------------------

Gzip reduces the size of the named files using Lempel-Ziv coding (LZ77).
Whenever  possible, each file is replaced by one with the extension .gz,
while keeping the same ownership modes, access and  modification  times.
The  LZ77 algorithm is the same one used by zip and PKZIP "deflate". The
amount of compression obtained depends on the size of the input and  the
distribution  of  common substrings. Typically, text such as source code
or English is reduced by 60-70%. Compression is  generally  much  better
than that achieved by LZW (as used in compress), Huffman coding (as used
in pack), or adaptive Huffman coding (compact). gzip  is  the  de  facto
standard compression program on unix, and is universally available. 


Package: msys-help2man                                   Subsystem: msys
Components: bin, doc, lic

generate man pages
------------------

help2man is a perl script to create man pages from  program  --help  and
--version output. 


Package: msys-inetutils                                  Subsystem: msys
Components: bin, dev, doc, lic

Common Networking Clients
-------------------------

inetutils provides common networking  clients,  including  telnet,  ftp,
rsh,  rlogin, tftp, and rcp, adapated and compiled for the MSYS platform
on Microsoft Windows. This MSYS package provides no servers. 

Most of these utilities are security nightmares, dating from a time when
the  internet  was a more innocent place. It is NOT recommended that you
use ANY of these utilities -- unless you have a VERY  good  reason.  Use
ssh, sftp, or scp from msys-openssh instead. 


Package: msys-less                                       Subsystem: msys
Components: bin, doc, lic

command-line text file viewer
-----------------------------

Less is a free, open-source file  pager.  A  pager  is  a  program  that
displays  text  files.  Other  pagers  commonly  in use are more and pg.
Pagers are often used in command-line environments like the  Unix  shell
and  the  MS-DOS  command prompt to display files. Windowed environments
like the Windows and Macintosh desktops don't need pagers as much, since
they have other methods for viewing files. 

Less is not an editor. You can't change the contents of the file  you're
viewing.  Less  is  not a windowing system. It doesn't have fancy scroll
bars or other GUI (graphical user interface) elements. It  was  designed
to work on simple text-only terminals. 


Package: msys-libarchive                                 Subsystem: msys
Components: dev, dll, doc, lic

library for handling various archive formats
--------------------------------------------

libarchive is a programming library that can  create  and  read  several
different streaming archive formats, including most popular tar variants
and several cpio formats, mtree, and ar archives. It can also read shar,
zip,  jar,  and  xar  archives,  as  well  as  ISO9660  CDROM images. It
automatically handles gzip, bzip2, compress, xz,  and  lzma  compression
and decompression, as well as uudecode decompression. The bsdtar program
is an implementation of tar(1) that is built on top of libarchive. 

This MSYS port  of  libarchive  differs  from  the  MinGW  version  also
provided  by  the  MinGW/MSYS project. In addition to requiring the MSYS
runtime library, this implementation supports mtree data and understands
MSYS's  "unix"  style  pathnames. It also supports archives that contain
symbolic links by converting them to equivalent hardlink  (or  recursive
copy)  representations (see msys-bsdtar for more information). The MinGW
implementation does not support archives with symbolic links, nor  mtree
data.  It  does,  however, operate properly on systems where MSYS is not
installed.  Both  msys-libarchive  and  mingw32-libarchive  (and   their
associated  bsdtar  and  bsdcpio  subpackages) depend on additional DLLs
such as msys-liblzma (mingw32-liblzma), etc. There is,  in  addition,  a
MinGW  package that provides a standalone version of bsdtar which has no
external    dependencies     and     only     limited     functionality:
mingw32-basic-bsdtar (see its documentation for more information). 

The msys-libarchive package provides the  runtime  library,  development
files,  and  documentation  for  libarchive.  The associated msys-bsdtar
package provides an implementation of tar(1) based on libarchive,  while
the associated msys-bsdcpio package provides a similar implementation of
cpio(1). 


Package: msys-libasprintf                                Subsystem: msys
Components: dll

GNU Internationalization Utility Library
----------------------------------------

This is not the libasprintf you are looking for. 

GNU gettext provides a set of tools that  create  a  framework  to  help
other  GNU  packages  produce  multi-lingual messages. In this way, with
suitable care a single binary application can automatically provide user
messages  (such  as  `help'  text)  in the language corresponding to the
current locale settings. libasprintf provides an implementation of the C
formatted  output  routines  suitable for use in C++ applications, where
i18n is a goal. 

This msys port of gettext has been modified specifically  for  the  MSYS
System Builder environment; that is, it is intended to be used only when
producing binary packages for the  MSYS  subsystem.  If  you  intend  to
produce  executables  for  the  native  "mingw32"  subsystem  (that  is,
applications that should work on Microsoft Windows installations without
the  MSYS dll), then you should install the mingw32-libintl-* package(s)
instead. 

The msys-libasprintf  package  provides  the  runtime  library  for  the
asprintf  utility  library. The associated msys-gettext package provides
utilities that may be useful to end-users, allowing interaction with the
message  translation  database  of  other i18n-enabled GNU utilities. It
also provides the development libraries, header files, and documentation
for  the  gettext  system,  as  well  as additional utilities useful for
maintainers of i18n-enabled applications.  The  *-ext  package  provides
extra  documentation,  in  the  form  of example implementations in many
different computer languages. The associated  msys-libgettextpo  package
provides  the  runtime  libraries  needed by the msys-gettext utilities,
while the associated msys-libintl package provides the runtime component
of  the internationalization library itself, which is used by many other
msys packages. 


Package: msys-libbz2                                     Subsystem: msys
Components: dev, dll

runtime library for bzip2
-------------------------

bzip2 is a freely available, patent free (see below), high-quality  data
compressor.  It  typically  compresses files to within 10% to 15% of the
best available techniques (the PPM family of  statistical  compressors),
whilst being around twice as fast at compression and six times faster at
decompression. This package provides the runtime library and development
files. 


Package: msys-libcharset                                 Subsystem: msys
Components: dll

GNU libraries and utilities for character set conversion
--------------------------------------------------------

This is not the libcharset you are looking for. 

GNU libiconv provides an implementation of the iconv() function which is
used  to convert between various character representations for different
locales. This function is  provided  for  use  on  systems  which  don't
already  have  iconv(),  or  whose implementation cannot convert from/to
Unicode. This package also provides a tool, iconv(1), which can be  used
to  convert  character  sets  from  the  command  line.  The  associated
libcharset provides a mechanism to determine the canonical character set
name of the current locale. 

This msys port of libiconv has been modified specifically for  the  MSYS
System Builder environment; that is, it is intended to be used only when
producing binary packages for the  MSYS  subsystem.  If  you  intend  to
produce  executables  for  the  native "mingw32" subsystem which require
character set conversion (that is,  applications  that  should  work  on
Microsoft  Windows  installations without the MSYS dll), then you should
install the mingw32-libiconv-* package(s) instead. 


Package: msys-libcrypt                                   Subsystem: msys
Components: dev, dll

runtime library for crypt
-------------------------

crypt provides a library implementing the standard encryption  functions
crypt(),  encrypt(),  and setkey(). Many programs, such as perl, rely on
the presence of these functions; as the functions are  not  provided  by
the MSYS runtime, this additional library fulfils those needs. 

crypt also provides a command-line tool for exercising those  functions.
`crypt  cleartext' generates an encrypted version of the cleartext using
a random salt. `crypt  salt  cleartext'  encrypts  cleartext  using  the
specified salt. Salt is a two-character string which also appears as the
first two characters of the encrypted cleartext. 

The msys-libcrypt package provides  the  libcrypt  runtime  library  and
related  development  files.  The associated msys-crypt package provides
the command-line utility crypt and related documentation. 


Package: msys-libexpat                                   Subsystem: msys
Components: dev, dll

XML parsing library written in C
--------------------------------

expat is a C library for parsing XML written by James Clark. Expat is  a
stream-oriented  XML  parser. This means that you register handlers with
the parser before starting the parse. These handlers are called when the
parser discovers the associated structures in the document being parsed.
A start tag is an example of the kind of structures for  which  you  may
register handlers. 

The msys-libexpat package  provides  the  runtime  library  and  related
development  files for expat. The associated msys-expat package provides
the xmlwf validation tool and documentation related to the library. 


Package: msys-libgdbm                                    Subsystem: msys
Components: dev, dll

runtime library for the GNU Database System
-------------------------------------------

The GNU  Database  System  is  a  set  of  database  routines  that  use
extensible  hashing.  It  works  similarly  to  the  standard  UNIX  dbm
routines, and provides  compatibility  replacement  interfaces  for  the
traditional 'dbm' and 'ndbm' libraries. 

The msys-libgdbm  package  provides  the  runtime  library  and  related
development  files for the GNU Database System. The associated msys-gdbm
package provides the command-line utilities  for  saving  and  restoring
GDBM  databases,  other  tools  for  testing  the  various compatibility
interfaces, and related documentation. 


Package: msys-libgettextpo                               Subsystem: msys
Components: dll

GNU Internationalization Utility Library
----------------------------------------

This is not the libgettextpo you are looking for. 

GNU gettext provides a set of tools that  create  a  framework  to  help
other  GNU  packages  produce  multi-lingual messages. In this way, with
suitable care a single binary application can automatically provide user
messages  (such  as  `help'  text)  in the language corresponding to the
current locale settings. libgettextpo provides runtime support  for  the
gettext  utilities; it is typically not needed by `regular' i18n clients
of libintl. 

This msys port of gettext has been modified specifically  for  the  MSYS
System Builder environment; that is, it is intended to be used only when
producing binary packages for the  MSYS  subsystem.  If  you  intend  to
produce  executables  for  the  native  "mingw32"  subsystem  (that  is,
applications that should work on Microsoft Windows installations without
the  MSYS dll), then you should install the mingw32-libintl-* package(s)
instead. 

The msys-libgettextpo package provides the runtime libraries  needed  by
the msys-gettext utilities. The associated msys-gettext package provides
utilities that may be useful to end-users, allowing interaction with the
message  translation  database  of  other i18n-enabled GNU utilities. It
also provides the development libraries, header files, and documentation
for  the  gettext  system,  as  well  as additional utilities useful for
maintainers of i18n-enabled applications.  The  *-ext  package  provides
extra  documentation,  in  the  form  of example implementations in many
different computer languages. The  associated  msys-libasprintf  package
provides  the  runtime  library  for  the  asprintf utility library; and
finally,  the  associated  msys-libintl  package  provides  the  runtime
component  of  the internationalization library itself, which is used by
many other msys packages. 


Package: msys-libgmp                                     Subsystem: msys
Components: dev, dll

The GNU Multiple Precision Arithmetic Library
---------------------------------------------

GNU MP is a library for arbitrary  precision  arithmetic,  operating  on
signed  integers, rational numbers, and floating point numbers. It has a
rich set of functions, and the functions have a regular interface. 

The MinGW/MSYS project provides two libgmp  packages:  this  msys-libgmp
one  and  a native win32 mingw32-libgmp. This one requires the MSYS dll,
and is provided as a necessary component of various MSYS tools, such  as
guile.  The  mingw32-gmp version is provided as a necessary component of
modern MinGW gcc compilers. 

The  msys-libgmp  package  provides  the  runtime  library  and  related
development   files.   The  associated  msys-gmp  package  provides  the
documentation for the gmp library. 


Package: msys-libguile                                   Subsystem: msys
Components: dev, dll, rtm

An extensible Scheme interpreter library
----------------------------------------

Guile  is  a  library  designed  to  help  programmers  create  flexible
applications.  Using Guile in an application allows programmers to write
plug-ins,  or  modules  (there  are  many  names,  but  the  concept  is
essentially  the  same) and users to use them to have an application fit
their needs. 

Guile is an  interpreter  for  the  Scheme  programming  language,  with
support for many SRFIs (Scheme Request For Implementations), packaged as
a library which can be incorporated into your programs. Your users  have
full  access  to the interpreter, so Guile itself can be extended, based
on the needs of the user. The result is a scripting language tailored to
your application. 

The msys-libguile package provides the  runtime  libraries,  development
files,  and  other  runtime support for guile. The associated msys-guile
package provides a  standalone  guile  interpreter  and  all  associated
documentation. 


Package: msys-libiconv                                   Subsystem: msys
Components: bin, dev, dll, doc, lic

GNU libraries and utilities for character set conversion
--------------------------------------------------------

This is not the libiconv you are looking for. 

GNU libiconv provides an implementation of the iconv() function which is
used  to convert between various character representations for different
locales. This function is  provided  for  use  on  systems  which  don't
already  have  iconv(),  or  whose implementation cannot convert from/to
Unicode. This package also provides a tool, iconv(1), which can be  used
to  convert  character  sets  from  the  command  line.  The  associated
libcharset provides a mechanism to determine the canonical character set
name of the current locale. 

This msys port of libiconv has been modified specifically for  the  MSYS
System Builder environment; that is, it is intended to be used only when
producing binary packages for the  MSYS  subsystem.  If  you  intend  to
produce  executables  for  the  native "mingw32" subsystem which require
character set conversion (that is,  applications  that  should  work  on
Microsoft  Windows  installations without the MSYS dll), then you should
install the mingw32-libiconv-* package(s) instead. 


Package: msys-libintl                                    Subsystem: msys
Components: dll

GNU Internationalization Runtime Library
----------------------------------------

This is not the libintl you are looking for. 

GNU gettext provides a set of tools that  create  a  framework  to  help
other  GNU  packages  produce  multi-lingual messages. In this way, with
suitable care a single binary application can automatically provide user
messages  (such  as  `help'  text)  in the language corresponding to the
current locale settings. libintl is the  primary  runtime  component  of
that framework. 

This msys port of gettext has been modified specifically  for  the  MSYS
System Builder environment; that is, it is intended to be used only when
producing binary packages for the  MSYS  subsystem.  If  you  intend  to
produce  executables  for  the  native  "mingw32"  subsystem  (that  is,
applications that should work on Microsoft Windows installations without
the  MSYS dll), then you should install the mingw32-libintl-* package(s)
instead. 

The msys-libintl package provides  the  runtime  component  of  the  GNU
internationalization library, which is used by many other MSYS packages.
The msys-gettext package  provides  utilities  that  may  be  useful  to
end-users, allowing interaction with the message translation database of
other i18n-enabled GNU  utilities.  It  also  provides  the  development
libraries,  header  files,  and documentation for the gettext system, as
well as additional utilities  useful  for  maintainers  of  i18n-enabled
applications.  The  *-ext  package  provides extra documentation, in the
form of example implementations in many  different  computer  languages.
The  associated msys-libgettextpo package provides the runtime libraries
needed by the msys-gettext utilities;  the  associated  msys-libasprintf
package provides the runtime library for the asprintf utility library. 


Package: msys-libltdl                                    Subsystem: msys
Components: dev, dll

A portable dlopen replacement
-----------------------------

This is not the libtool you are looking for. 

GNU libtool is a generic library  support  package.  Libtool  hides  the
complexity  of  using  shared  libraries  behind  a consistent, portable
interface. Libtool requires the use of Autoconf. 

This msys port of libtool has been modified specifically  for  the  MSYS
System  Builder  (msys-dvlpr) environment; that is, it is intended to be
used only when producing binary packages for the MSYS subsystem. If  you
intend  to  produce executables for the native "mingw32" subsystem (that
is, applications that should work  on  Microsoft  Windows  installations
without  the  MSYS  dll),  then you should install the mingw32-libtool-*
package instead. 

msys-libltdl provides the runtime  library  and  development  files  for
using  a  pre-built version of libtool's dlopen replacement library. The
associated msys-libtool  package  provides  the  development  files  and
utilities  for  managing  the  creation and use of shared libraries in a
platform independent manner. 


Package: msys-liblzma                                    Subsystem: msys
Components: dev, dll

High performance compression library based on the LZMA algorithm
----------------------------------------------------------------

LZMA is  data  compression  algorithm  based  on  the  Lempel-Ziv-Markov
chain-Algorithm.  It  provides  high  compression  ratios  and very fast
decompression, with minimal memory requirements  for  decompression.  XZ
Utils  is  the latest generation of this software, supplanting the older
LZMA Utils, which itself was a friendly fork of the original  LZMA  SDK.
The  msys-xz  package provides commandline utilities for compression and
decompression of XZ and LZMA data,  and  documentation.  The  associated
msys-liblzma  package provides the runtime library and development files
for creating applications that use LZMA or XZ compression. 

The MinGW/MSYS project provides both a native (mingw32) version and this
MSYS  version of the liblzma package(s). While the latter is the primary
tool from the perspective of the MSYS distribution, the MinGW version is
provided   as   one  of  the  prerequisites  for  the  native  (mingw32)
basic-bsdtar utility. 


Package: msys-libmagic                                   Subsystem: msys
Components: dev, dll

library for determining file type
---------------------------------

The file command is used to identify a particular file according to  the
type  of  data  contained  by the file. File can identify many different
file types, including ELF binaries, system libraries, RPM packages,  and
different graphics formats. 

The msys-libmagic package provides  the  libmagic  runtime  library  and
development  files.  The  associated msys-file package provides the file
command  and  the  pre-compiled  magic  database,  which  describes  how
different file types should be identified. 


Package: msys-libminires                                 Subsystem: msys
Components: dev, dll

Simple win32 DNS client
-----------------------

minires provides a simple implementation of resolver functions  commonly
used in clients, adapted to the MSYS environment. 

On Windows 2000 and above, the  query  functions  (like  res_query)  are
implemented  by  calling the Win32 API function DnsQuery and translating
the  result  to  wire   format   --   if   the   file   /etc/resolv.conf
(c:\msys\1.0\etc\resolv.conf)  is  not  readable  or contains an options
line with the token "osquery". 

Otherwise, minires works as  a  simple  synchronous  non-  caching  stub
resolver.  Instead  of querying a local bind daemon, this implementation
attempts to reach predefined name servers. Their addresses are  obtained
directly    from   Windows   (except   on   Win95   with   DHCP),   from
/etc/resolv.conf, or from the LOCALDOMAIN environment variable. 

The msys-libminires package provides the  runtime  library  and  related
development  files,  while  the  associated msys-minires minires package
provides the documentation and test/debug applications. 


Package: msys-libminizip                                 Subsystem: msys
Components: dev, dll

Simple ZIP support from zlib
----------------------------

The minizip library provides zlib-based  support  for  manipulating  ZIP
archives. It is suitable for clients that need only create, inspect, and
unpack such archives; more demanding needs may be met by the  libarchive
package. 

This distribution also provides two simple utility programs: minizip and
miniunzip.  Again, more sophisticated needs are met by the unzip and zip
packages. 


Package: msys-libopenssl                                 Subsystem: msys
Components: dev, dll

Open source crypto toolkit for TLS/SSL
--------------------------------------

openssl is a collaborative effort to develop a robust, commercial-grade,
fully  featured, and Open Source toolkit implementing the Secure Sockets
Layer (SSL v2/v3) and Transport Layer Security  (TLS  v1)  protocols  as
well  as  a  full-strength  general  purpose  cryptography  library. The
project is managed by a worldwide community of volunteers that  use  the
Internet  to  communicate, plan, and develop the OpenSSL toolkit and its
related documentation. 

The msys-libopenssl package provides the  runtime  library  and  related
development  files.  The  associated  msys-openssl  package provides the
documentation for the openssl library, a few  pre-defined  certificates,
and several useful utilities. 


Package: msys-libopts                                    Subsystem: msys
Components: dev, dll

a semi-automated command line parsing library
---------------------------------------------

AutoGen is a tool designed to simplify the creation and  maintenance  of
programs   that  contain  large  amounts  of  repetitious  text.  It  is
especially valuable in programs that have several blocks  of  text  that
must  be kept synchronized. libopts provides the runtime component of an
autogen add-on that simplifies the maintainance of that portion of  your
code that parses command-line options. 

A common  example  where  this  would  be  useful  is  in  creating  and
maintaining the code required for processing program options. Processing
options requires multiple constructs to be  maintained  in  parallel  in
different  places  in your program. Options maintenance needs to be done
countless times. So, AutoGen comes with an add-on package named AutoOpts
that simplifies the maintenance and documentation of program options. 

The msys-libopts package provides the runtime  library  and  development
files  for AutoOpts, a semi-automated command line option parser library
and toolset  based  on  AutoGen.  The  associated  msys-autogen  package
provides the autogen utilities and documentation. 


Package: msys-libpopt                                    Subsystem: msys
Components: dev, dll, lang

Command line option parsing library
-----------------------------------

popt is a command line option parsing library. While popt is similiar to
getopt,  it  contains a number of enhancements. This version is based on
the rpm5.org version of popt,  rather  than  the  rpm.org  version.  The
rpm5.org implementation is more portable. 

The msys-libpopt package provides the runtime  library  and  development
files.  The  associated msys-popt package provides the documentation for
the popt library. 


Package: msys-libregex                                   Subsystem: msys
Components: dev, dll

Regular Expressions Library
---------------------------

Regex provides an implementation of the  GNU,  POSIX,  and  BSD  regular
expression  functions.  Current  versions  are  derived  from the GNULIB
implementation of the regex module, but an older version of the  runtime
derived  from the venerable GNU regex library, with a slightly different
interface, is available for legacy MSYS applications. 

The msys-libregex package the runtime library  and  related  development
files,   while   the   associated   msys-regex   package   provides  the
documentation. 


Package: msys-libtermcap                                 Subsystem: msys
Components: dev, dll

The terminal feature library used by certain applications
---------------------------------------------------------

The msys-libtermcap package provides the runtime and development support
libraries  for  applications  which  use  the /etc/termcap database. The
associated msys-termcap package provides that  database,  which  defines
the  capabilities  of  various terminals and terminal emulators. Certain
programs use  the  /etc/termcap  file  to  access  various  features  of
terminals (the bell, colors, and graphics, etc.). 

Unless you  develop  MSYS  applications,  you  probably  only  need  the
msys-termcap-bin  package, which contains the /etc/termcap database, and
the msys-libtermcap-dll package, which provides the runtime library. 


Package: msys-libtool                                    Subsystem: msys
Components: bin, doc, lic

A shared library generation tool
--------------------------------

This is not the libtool you are looking for. 

GNU libtool is a generic library  support  package.  Libtool  hides  the
complexity  of  using  shared  libraries  behind  a consistent, portable
interface. Libtool requires the use of Autoconf. 

This msys port of libtool has been modified specifically  for  the  MSYS
System  Builder  (msys-dvlpr) environment; that is, it is intended to be
used only when producing binary packages for the MSYS subsystem. If  you
intend  to  produce executables for the native "mingw32" subsystem (that
is, applications that should work  on  Microsoft  Windows  installations
without  the  MSYS  dll),  then you should install the mingw32-libtool-*
package instead. 

msys-libtool provides the development files and utilities  for  managing
the  creation  and  use  of  shared  libraries in a platform independent
manner. The associated msys-libltdl package provides the runtime library
and  development files for using a pre-built version of libtool's dlopen
replacement library. 


Package: msys-libxml2                                    Subsystem: msys
Components: bin, dev, dll, doc, lic

An XML parser and toolkit
-------------------------

Libxml2 is the XML C parser and toolkit developed for the Gnome  project
(but  usable  outside  of  the  Gnome  platform).  It  is  free software
available under the MIT License. XML itself is a metalanguage to  design
markup  languages,  i.e.  text language where semantic and structure are
added to the content using extra 'markup' information  enclosed  between
angle  brackets. HTML is the most well-known markup language. Though the
library is written  in  C,  a  variety  of  language  bindings  make  it
available in other environments. 


Package: msys-lndir                                      Subsystem: msys
Components: bin, doc, lic

Xorg recursive directory symlink tool
-------------------------------------

The lndir program makes a shadow copy of a directory tree,  except  that
the  shadow  is  not populated with real files but instead with symbolic
links (*) pointing at the real files in  the  original  directory  tree.
This  is  usually  useful  building  applications  outside  their source
directory, when the build  machinery  does  not  directly  support  that
behavior. You can build in the shadow tree, and the object files will be
in the shadow directory, while the source files in the shadow  directory
are just symlinks (*) to the real files. 

(*) On MSYS, instead of symbolic links the shadow tree is populated with
hardlinks  to  the  original files whenever possible, and with copies if
not (e.g. the original and  destination  directories  are  on  different
devices, or the file system is not NTFS). 


Package: msys-locate                                     Subsystem: msys
Components: bin

A database-driven fast 'find'
-----------------------------

The GNU Find Utilities are the basic directory  searching  utilities  of
the   GNU  operating  system.  These  programs  are  typically  used  in
conjunction  with  other  programs  to  provide  modular  and   powerful
directory search and file locating capabilities to other commands. 

The msys-locate package provides 'locate' --  list  files  in  databases
that match a pattern, and 'updatedb' -- update a file name database. The
associated msys-findutils package provides 'find' -- search for files in
a  directory  hierarchy,  and 'xargs' -- build and execute command lines
from standard input. 

The msys-locate package is an optional adjunct to the standard MSYS Base
System installation; it is NOT automatically installed as a component of
msys-base, and must be selected independently, if desired. 


Package: msys-lpr-enhanced                               Subsystem: msys
Components: bin, doc, lic

A full-featured implementation of unix lpr for MSYS
---------------------------------------------------

lpr-enhanced is an implementation of the unix lpr system for  MSYS,  and
unlike   lpr-basic   (msys-cygutils)   supports  many  of  the  advanced
capabilities of a  true  Unix  implementation.  These  features  include
format-dependent  filters  to  pre-process  data  before spooling to the
printer. The filters may includes nroff, ditroff, or TeX pre-processors,
among  others. It supports /etc/printcap-style configuration, and honors
both BSD options (when invoked as 'lpr') and SysV options (when  invoked
as      'lp').     A     sample     /etc/printcap     file     is     in
/var/spool/lp/config/example,    but    it    MUST    be    copied    to
/var/spool/lp/config/.active or to /etc/printcap and customized for your
environment -- just like on unix. 

The lpr-basic executable from the msys-cygutils package (see  below)  is
installed,  by  default, as both /bin/lpr.exe and /bin/lpr-basic.exe. To
use lpr-enhanced, you should manually remove /bin/lpr.exe, and  manually
copy  /bin/lpr-enhanced  to  /bin/lpr  (and/or /bin/lp). You may need to
repeat this step each time msys-cygutils is (re)installed or updated. 

A note about lpr-basic: lpr-basic spools a file to the specified printer
device.  MSYS  provides  two separate implementations: lpr-basic.exe and
lpr-enhanced. lpr-basic.exe is suitable for most simple printing  needs;
it  can  send  "raw" data to any installed Windows printer. This is most
useful  for  raw  text,  for   sending   plain   PostScript   files   to
PostScript-compatible  printers, and for re-sending .prn files generated
using Windows' own print-to-file capabilities to  the  specific  printer
for  which  the  .prn  file was generated. lpr-enhanced is more capable,
more unix-like, and more difficult to configure. Use lpr-enhanced if you
need  the  additional  flexibility  it provides, or are more comfortable
with traditional unix lpr and/or lp semantics. 


Package: msys-m4                                         Subsystem: msys
Components: bin, doc, lic

GNU Macro Processor
-------------------

m4 is a macro processor, in the sense that it copies its  input  to  the
output,  expanding  macros  as  it  goes.  Macros  are either builtin or
user-defined, and can take any number of arguments. Besides  just  doing
macro  expansion,  `m4' has builtin functions for including named files,
running shell commands, doing integer arithmetic, manipulating  text  in
various ways, performing recursion, etc.... `m4' can be used either as a
front-end to a compiler, or as a macro processor in its own  right.  Its
primary use is by autoconf, to generate configure scripts from a library
of m4 macros. 


Package: msys-make                                       Subsystem: msys
Components: bin, doc, lang, lic

GNU make utility to maintain groups of programs
-----------------------------------------------

The `make' utility automatically determines  which  pieces  of  a  large
program  need  to  be recompiled, and issues commands to recompile them.
GNU `make' was implemented  by  Richard  Stallman  and  Roland  McGrath.
Development since Version 3.76 has been handled by Paul D. Smith. 

This is a case-preserving version of GNU  make.  While  the  win32  file
systems   encountered   when   using   MSYS   software   are  invariably
case-INsensitive,  some  users  prefer  a  GNU  `make'  that  itself  is
case-sensitive  --  this  version of make is a compromise which exploits
the case-preserving aspect of win32 file  systems.  It  considers  *all*
targets as fundamentally case-insensitive, but first attempts to resolve
them as case-sensitive, falling back to the  case-insensitive  behaviour
only if the case-sensitive match remains unresolved. 

The MinGW/MSYS project provides two versions  of  make:  this  msys-make
version  acts  generally  more as make is intended to operate, and gives
fewer headaches during execution. However, msys-make requires  the  MSYS
dll. The other version, mingw32-make, does not require the MSYS dll, but
because of the lack of POSIX support in "pure" Win32  has  a  number  of
known shortcomings in comparison. 


Package: msys-man                                        Subsystem: msys
Components: bin, doc, lang, lic

formats and displays manual pages
---------------------------------

Formats and displays on-line manual pages.  Note  that  most  MinGW/MSYS
packages  do  not,  by  default,  install the man pages; generally these
documents are provided in a -doc or -man subpackage. 


Package: msys-minires                                    Subsystem: msys
Components: bin, doc, lic

Simple win32 DNS client
-----------------------

minires provides a simple implementation of resolver functions  commonly
used in clients, adapted to the MSYS environment. 

On Windows 2000 and above, the  query  functions  (like  res_query)  are
implemented  by  calling the Win32 API function DnsQuery and translating
the  result  to  wire   format   --   if   the   file   /etc/resolv.conf
(c:\msys\1.0\etc\resolv.conf)  is  not  readable  or contains an options
line with the token "osquery". 

Otherwise, minires works as  a  simple  synchronous  non-  caching  stub
resolver.  Instead  of querying a local bind daemon, this implementation
attempts to reach predefined name servers. Their addresses are  obtained
directly    from   Windows   (except   on   Win95   with   DHCP),   from
/etc/resolv.conf, or from the LOCALDOMAIN environment variable. 

The msys-minires package provides  the  documentation  for  the  minires
library    and    test/debug    applications,   while   the   associated
msys-libminires  package  provides  the  runtime  library  and   related
development files. 


Package: msys-minizip                                    Subsystem: msys
Components: bin

Simple ZIP support from zlib
----------------------------

The minizip package provides two simple ZIP archive manipulation  tools,
based on the minizip library from zlib. More sophisticated needs are met
by the unzip and zip packages. 

The libminizip library provides zlib-based support for manipulating  ZIP
archives. It is suitable for clients that need only create, inspect, and
unpack such archives; more demanding needs may be met by the  libarchive
package. 


Package: msys-mintty                                     Subsystem: msys
Components: bin, doc

terminal emulator
-----------------

Mintty is a terminal emulator for Cygwin and Cygwin derivatives such  as
MSYS. 

To  launch  MSYS  in   a   mintty   window,   create   a   shortcut   to
C:\msys\1.0\msys.bat,  with  the  argument  "--mintty". Some people find
mintty a more accomodating  terminal  than  cmd.exe,  since  it  may  be
resized  at  will  and  has  a larger scrollback buffer. However, mintty
sometimes does not interoperate well with native applications  (such  as
MinGW  gcc),  so  the  default  cmd.exe  console is recommended for most
users. 


Package: msys-mksh                                       Subsystem: msys
Components: bin, doc, lic

mksh: The MirBSD Korn Shell
---------------------------

The MirBSD Korn Shell is an actively developed  free  implementation  of
the Korn Shell programming language and a successor to the Public Domain
Korn Shell (pdksh). 


Package: msys-mktemp                                     Subsystem: msys
Components: bin, doc, lic

create a temporary file or directory
------------------------------------

The mktemp utility takes the given filename template  and  overwrites  a
portion  of  it  to  create  a  unique filename. The template may be any
filename  with  some  number  of  `Xs'  appended  to  it,  for   example
/tmp/tfile.XXXXXXXXXX.   It  is  used  by  scripts  to  safely  generate
temporary files and directories. 


Package: msys-openssh                                    Subsystem: msys
Components: bin, doc, lic

Secure Networking Clients
-------------------------

openssh is a FREE version of the SSH connectivity tools  that  technical
users  of the Internet rely on. Users of telnet, rlogin, and ftp may not
realize  that  their  password  is  transmitted  across   the   Internet
unencrypted,   but  it  is.  OpenSSH  encrypts  all  traffic  (including
passwords) to effectively eliminate eavesdropping, connection hijacking,
and  other  attacks.  Additionally,  OpenSSH  provides  secure tunneling
capabilities and several authentication methods, and  supports  all  SSH
protocol versions. 

The OpenSSH suite replaces rlogin and telnet with the ssh  program,  rcp
with  scp,  and  ftp with sftp. Other utilities like ssh-add, ssh-agent,
ssh-keysign, ssh-keyscan, and ssh-keygen are also included. 


Package: msys-openssl                                    Subsystem: msys
Components: bin, doc, lic

Open source crypto toolkit for TLS/SSL
--------------------------------------

openssl is a collaborative effort to develop a robust, commercial-grade,
fully  featured, and Open Source toolkit implementing the Secure Sockets
Layer (SSL v2/v3) and Transport Layer Security  (TLS  v1)  protocols  as
well  as  a  full-strength  general  purpose  cryptography  library. The
project is managed by a worldwide community of volunteers that  use  the
Internet  to  communicate, plan, and develop the OpenSSL toolkit and its
related documentation. 

The msys-openssl package provides  the  documentation  for  the  openssl
library,  a  few pre-defined certificates, and several useful utilities.
The associated msys-libopenssl package provides the runtime library  and
related development files. 


Package: msys-patch                                      Subsystem: msys
Components: bin, doc, lic

Apply a diff file to an original
--------------------------------

GNU patch is an  implementation  of  Larry  Wall's  program  that  takes
"diff's"  output  and  applies  it  to  an  original  file to generate a
modified version of that file. Normally, the patched versions are put in
place of the originals. Backups can be made. 


Package: msys-perl                                       Subsystem: msys
Components: bin, doc, html, lic, man

The Perl programming language
-----------------------------

Perl is a general-purpose programming language originally developed  for
text  manipulation  and  now  used  for  a wide range of tasks including
system  administration,  web  development,  network   programming,   GUI
development,  and  more.  Its primary utility on the MSYS platform is to
run the autoconf and automake developer utilities. 


Package: msys-popt                                       Subsystem: msys
Components: doc, lic

Command line option parsing library
-----------------------------------

popt is a command line option parsing library. While popt is similiar to
getopt,  it  contains a number of enhancements. This version is based on
the rpm5.org version of popt,  rather  than  the  rpm.org  version.  The
rpm5.org implementation is more portable. 

The msys-popt package provides the documentation for the  popt  library.
The  associated  msys-libpopt  package  provides the runtime library and
development files. 


Package: msys-rebase                                     Subsystem: msys
Components: bin, dev, doc, lic

A tool for managing DLL address conflicts
-----------------------------------------

rebase provides various utilities that can assist with the  dreaded  DLL
initialization  problem,  whose primary symptom is error messages of the
form: "sync_with_child: child state waiting for longjmp" or "fork_child:
recreate_mmaps_after_fork_failed".  This  "rebase  problem"  is  due  to
fork() failing to reload DLLs in the child at the same address as in the
parent.  This  is  caused by DLLs which have conflicting base addresses.
The rebase tool and the associated  rebaseall  script  allow  to  change
those base addresses for every DLL in an MSYS installation, so that they
hopefully do not conflict. 

The msys-rebase package also provides the peflags and peflagsall  tools,
which can be used to change certain settings in every executable and DLL
in an MSYS installation. On Windows Vista and above, it can be  used  to
enable  the  Address Space Layout Randomization (ASLR) setting, which is
an alternate mechanism to address the "rebase problem". It can  also  be
used to enable the Terminal Server Aware flag, which may be important on
Windows Terminal Services and Windows Server operating systems. 


Package: msys-regex                                      Subsystem: msys
Components: doc, lic

Regular Expressions Library Documentation
-----------------------------------------

Regex provides an implementation of the  GNU,  POSIX,  and  BSD  regular
expression  functions.  Current  versions  are  derived  from the GNULIB
implementation of the regex module, but an older version of the  runtime
derived  from the venerable GNU regex library, with a slightly different
interface, is available for legacy MSYS applications. 

The msys-regex package provides the documentation for the regex library,
while  the associated msys-libregex package provides the runtime library
and related development files. 


Package: msys-rsync                                      Subsystem: msys
Components: bin, doc, lic

file transfer program
---------------------

rsync is a file transfer program. rsync uses the 'rsync algorithm' which
provides a very fast method for bringing remote files into sync. It does
this by sending just the differences  in  the  files  across  the  link,
without requiring that both sets of files are present at one of the ends
of the link beforehand. 


Package: msys-rxvt                                       Subsystem: msys
Components: bin, doc, lic

terminal emulator
-----------------

VT102 terminal emulator for both X and Windows. This  version  has  been
modified  and  compiled  for  use  in the MSYS environment, and does not
attempt to use an X display even if available;  it  always  operates  in
"native" Windows mode. 

To  launch  MSYS   in   an   rxvt   window,   create   a   shortcut   to
C:\msys\1.0\msys.bat,  with the argument "--rxvt". Some people find rxvt
a more accomodating terminal than cmd.exe, since it may  be  resized  at
will  and  has  a larger scrollback buffer. However, rxvt sometimes does
not interoperate well with native applications (such as MinGW  gcc),  so
the default cmd.exe console is recommended for most users. 

Another  alternative  console  implementation  that  many   users   find
congenial is the "Console 2.00" project. This replacement console is not
provided by the MinGW/MSYS team directly for licensing reasons  (Console
2.00  is  GPL,  but cannot currently be compiled using Libre tools), but
you  may  install  the   msys-console   package   which   provides   the
`console-config'  script.  This script which will download, install, and
configure the Console 2.00 team's packages. 


Package: msys-sed                                        Subsystem: msys
Components: bin, doc, lang, lic

GNU Stream Editor
-----------------

sed is a stream editor. A stream editor is used to  perform  basic  text
transformations  on  an  input stream (a file or input from a pipeline).
While in some ways similar to an editor  which  permits  scripted  edits
(such  as  ed), sed works by making only one pass over the input(s), and
is consequently more efficient. But it is sed's ability to  filter  text
in  a  pipeline  which particularly distinguishes it from other types of
editors. 


Package: msys-system-builder                             Subsystem: msys
Components: bin

Tools for Building MSYS and MSYS utilities (meta)
-------------------------------------------------

This  meta  package  contains  the   components   necessary   to   build
MSYS-dependent  applications  and  libraries,  as  well  as the MSYS DLL
itself. It does not include headers or  link  libraries  needed  to  use
pre-built  MSYS  libraries  distributed  by  the  MinGW/MSYS project; if
desired, those should be installed as needed, individually. In a  manner
of   speaking,   this  "replicates"  the  tools  installed  by  the  old
"msysDVLPR" package ~~ although (1) that package contained  an  obsolete
version  of gcc-2.95.3, while the tools installed by this (meta) package
are much newer, and (2) this (meta) package  also  adds  MSYS-customized
versions  of  the  autotools  (autoconf, automake, libtool, gettext, and
libiconv). These msys-autotools can be installed and  used  in  parallel
with  the  normal,  MinGW-flavored ones installed by the MinGW Developer
Toolkit (MinGW-DTK). 


Package: msys-tar                                        Subsystem: msys
Components: bin, doc, ext, lang, lic

GNU tar archiver tool
---------------------

GNU tar is an archiver that creates and handles file archives in various
formats.  You can use tar to create file archives, to extract files from
previously created archives, store additional files, or update  or  list
files which were already stored. 

The program saves many  files  together  into  a  single  tape  or  disk
archive,  and can restore individual files from the archive. It includes
multivolume support, the ability  to  archive  sparse  files,  automatic
archive  compression/decompression, remote archives and special features
that allow 'tar' to be used for incremental and full backups. 

The supported archive formats are: V7 tar, GNU, ustar  and  POSIX  (also
known  as  pax  interchange  format).  GNU tar can also read and extract
'star' archives. Tar can direct its output to available devices,  files,
or  other  programs (using pipes); tar can even access remote devices or
files (as archives). 

The MinGW/MSYS project provides four different tar implementations:  (1)
msys-tar,  this GNU tar implementation ported for MSYS; (2) msys-bsdtar,
a BSD tar implementation based on libarchive and ported  for  MSYS;  (3)
mingw32-bsdtar,  a  BSD  tar  implementation  ported for MinGW (that is,
native Win32); and  (4)  mingw32-basic-bsdtar,  a  limited-functionality
version  of  mingw32-bsdtar with no external dependencies. GNU tar (e.g.
msys-tar) is  the  de  facto  standard  implementation,  but  bsdtar  is
generally faster. Generally, any of these implementations will meet most
needs. 


Package: msys-termcap                                    Subsystem: msys
Components: bin, doc, lic

The terminal feature database used by certain applications
----------------------------------------------------------

The msys-termcap package provides the /etc/termcap file. /etc/termcap is
a  database  which  defines  the  capabilities  of various terminals and
terminal emulators. Certain programs use the /etc/termcap file to access
various  features  of  terminals (the bell, colors, and graphics, etc.).
The associated  libtermcap  package  provides  runtime  and  development
support libraries for the applications which use the database. 

Unless you  develop  MSYS  applications,  you  probably  only  need  the
msys-termcap-bin  package, which contains the /etc/termcap database, and
the msys-libtermcap-dll package, which provides the runtime library. 


Package: msys-texinfo                                    Subsystem: msys
Components: bin, doc, lang, lic

Documentation system for on-screen and printed manuals
------------------------------------------------------

Texinfo is the official documentation format of the GNU project. It  was
invented  by  Richard  Stallman and Bob Chassell many years ago, loosely
based on Brian Reid's Scribe and other formatting languages of the time.
It is used by many non-GNU projects as well. 

Texinfo uses a single source file to  produce  output  in  a  number  of
formats, both online and printed (dvi, html, info, pdf, xml, etc.). This
means that instead of writing different documents for online information
and  another for a printed manual, you need write only one document. And
when the work is revised, you need revise only that one document. 

msys-texinfo provides makeinfo, for generating .info output  files  from
.texi  input;  install-info,  for  installing them correctly in an info/
directory and updating the info/dir manifest; and  info,  a  viewer  for
info  documentation  files.  Note  that  generating  .dvi or .pdf output
requires a fully-fledged TeX implementation, which is not  available  as
part of the MinGW/MSYS distribution -- MikTeX may be of some assistance.



Package: msys-tiny                                       Subsystem: msys
Components: bin

A Tiny MSYS Installation (meta)
-------------------------------

This  meta  package  provides  the  smallest  possible  functional  MSYS
installation.  It  includes  only  MSYS  itself, a bash shell, and a few
absolutely required commandline utilities. Other components can be added
manually as needed. 


Package: msys-unzip                                      Subsystem: msys
Components: bin, doc, lic

Command-line unpacker for .zip archives
---------------------------------------

UnZip  from  the  InfoZIP  project  is  an   open-source,   command-line
alternative  to  other  tools,  such as WinZip, for unpacking zip-format
archives. 


Package: msys-vim                                        Subsystem: msys
Components: bin, doc, lang, lic

Vi IMproved, a programmers text editor
--------------------------------------

Vim is a highly configurable text editor built to enable efficient  text
editing.  It  is  an  improved version of the vi editor distributed with
most UNIX systems. Vim is distributed free as charityware. If  you  find
Vim  a  useful  addition  to  your  life  please  consider helping needy
children in Uganda (http://iccf-holland.org/). 


Package: msys-w32api                                     Subsystem: msys
Components: dev

The MinGW API for 32-Bit MS-Windows (msys)
------------------------------------------

This is not the w32api you are looking for. 

This package provides the header files and import libraries constituting
a  standard  API  for  the development of applications which utilise the
capabilities of the 32-bit MS-Windows  system  dynamic  link  libraries,
configured   specifically   for   use   with  the  MSYS  System  Builder
(msys-dvlpr) toolset. It should be installed into the /  ==  /usr  (that
is,  C:\msys\1.0)  directory,  and  NOT  intoo  the usual MinGW location
/mingw (C:\MinGW). 

Install this component only  if  you  intend  to  create  MSYS-dependent
applications. 


Package: msys-wget                                       Subsystem: msys
Components: bin, doc, lang, lic

non-interactive network downloader
----------------------------------

Wget is a network utility to retrieve files from the Web  using  http(s)
and  ftp,  the  two  most  widely  used  Internet protocols. The program
supports recursive retrieval of web-authoring pages as well as ftp sites
--  you  can  use  wget to make mirrors of archives and home pages or to
travel the Web like a WWW robot. 

Wget works particularly  well  with  slow  or  unstable  connections  by
continuing   to   retrieve  a  document  until  the  document  is  fully
downloaded. Re-getting files from where it left  off  works  on  servers
(both http and ftp) that support it. Both http and ftp retrievals can be
time stamped, so wget can see if the remote file has changed  since  the
last retrieval and automatically retrieve the new version if it has. 

The MinGW/MSYS project provides two versions  of  wget:  this  MSYS  one
supports https and understands MSYS pathnames, but requires the MSYS dll
(and various others) to be installed. There is also a 'mingwPORT'  wget,
which  is  a  MinGW (that is, native Win32) version. That version has no
external dependencies but is based on an older version of wget and  does
not support https. 


Package: msys-xz                                         Subsystem: msys
Components: bin, doc, lang, lic

High performance compression based on the LZMA algorithm
--------------------------------------------------------

LZMA is  data  compression  algorithm  based  on  the  Lempel-Ziv-Markov
chain-Algorithm.  It  provides  high  compression  ratios  and very fast
decompression, with minimal memory requirements  for  decompression.  XZ
Utils  is  the latest generation of this software, supplanting the older
LZMA Utils, which itself was a friendly fork of the original  LZMA  SDK.
The  msys-xz  package provides commandline utilities for compression and
decompression of XZ and LZMA data,  and  documentation.  The  associated
msys-liblzma  package provides the runtime library and development files
for creating applications that use LZMA or XZ compression. 

The MinGW/MSYS project provides both a native (mingw32) version and this
MSYS  version of the xz package(s). While the latter is the primary tool
from the perspective of the MSYS  distribution,  the  MinGW  version  is
provided   as   one  of  the  prerequisites  for  the  native  (mingw32)
basic-bsdtar utility. 


Package: msys-zip                                        Subsystem: msys
Components: bin, doc, lic

Info-ZIP compression utility
----------------------------

Zip is a compression and file packaging/archive utility. Although highly
compatible both with PKWARE's PKZIP and PKUNZIP utilities for MS-DOS and
with Info-ZIP's own UnZip, the primary objectives have been  portability
and other-than-MSDOS functionality. 


Package: msys-zlib                                       Subsystem: msys
Components: dev, dll, doc, lic

A Massively Spiffy Yet Delicately Unobtrusive Compression Library
-----------------------------------------------------------------

The  zlib  compression  library  provides  in-memory   compression   and
decompression  functions, including integrity checks of the uncompressed
data. 

